{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/guards/auth.guard.ts","./src/app/models/commentDTO.ts","./src/app/models/post.model.ts","./src/app/models/user.ts","./src/app/pages/auth/auth-routing.module.ts","./src/app/pages/auth/auth.component.ts","./src/app/pages/auth/auth.component.html","./src/app/pages/auth/auth.module.ts","./src/app/pages/auth/change-password/change-password.component.ts","./src/app/pages/auth/change-password/change-password.component.html","./src/app/pages/auth/confirm-account/confirm-account.component.ts","./src/app/pages/auth/recover-password/recover-password.component.ts","./src/app/pages/auth/recover-password/recover-password.component.html","./src/app/pages/auth/signin/signin.component.ts","./src/app/pages/auth/signin/signin.component.html","./src/app/pages/auth/signup/signup.component.ts","./src/app/pages/auth/signup/signup.component.html","./src/app/pages/dialogs/dialog-signin/dialog-signin.component.ts","./src/app/pages/dialogs/dialog-signin/dialog-signin.component.html","./src/app/pages/facebook/create-post/create-post.component.ts","./src/app/pages/facebook/create-post/create-post.component.html","./src/app/pages/facebook/edit-my-post/edit-my-post.component.ts","./src/app/pages/facebook/edit-my-post/edit-my-post.component.html","./src/app/pages/facebook/facebook-routing.module.ts","./src/app/pages/facebook/facebook.component.ts","./src/app/pages/facebook/facebook.component.html","./src/app/pages/facebook/facebook.module.ts","./src/app/pages/facebook/header/header.component.ts","./src/app/pages/facebook/my-publications/my-publications.component.ts","./src/app/pages/facebook/my-publications/my-publications.component.html","./src/app/pages/facebook/publications/comments/comments.component.ts","./src/app/pages/facebook/publications/comments/comments.component.html","./src/app/pages/facebook/publications/publications.component.ts","./src/app/pages/facebook/publications/publications.component.html","./src/app/pages/home/edit-user/edit-user.component.ts","./src/app/pages/home/edit-user/edit-user.component.html","./src/app/pages/home/header/header.component.ts","./src/app/pages/home/header/header.component.html","./src/app/pages/home/home-routing.module.ts","./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/pages/home/home.module.ts","./src/app/pages/home/page404/page404.component.ts","./src/app/pages/home/page404/page404.component.html","./src/app/pages/home/select/select.component.ts","./src/app/pages/home/select/select.component.html","./src/app/pages/tiktok/comments/comments.component.ts","./src/app/pages/tiktok/comments/comments.component.html","./src/app/pages/tiktok/create-post/create-post.component.ts","./src/app/pages/tiktok/create-post/create-post.component.html","./src/app/pages/tiktok/header/headert.component.ts","./src/app/pages/tiktok/my-publications/my-publications.component.ts","./src/app/pages/tiktok/my-publications/my-publications.component.html","./src/app/pages/tiktok/publications/publications.component.ts","./src/app/pages/tiktok/publications/publications.component.html","./src/app/pages/tiktok/tiktok-routing.module.ts","./src/app/pages/tiktok/tiktok.component.ts","./src/app/pages/tiktok/tiktok.component.html","./src/app/pages/tiktok/tiktok.module.ts","./src/app/service/alerts.service.ts","./src/app/service/comments.service.ts","./src/app/service/errores.service.ts","./src/app/service/login.service.ts","./src/app/service/menu.service.ts","./src/app/service/publicaciones.service.ts","./src/app/shared/UnsubscribeOnDestroyAdapter.ts","./src/app/shared/components/feather-icons/feather-icons.component.ts","./src/app/shared/components/feather-icons/feather-icons.component.html","./src/app/shared/components/feather-icons/feather-icons.module.ts","./src/app/shared/material.module.ts","./src/app/shared/shared.module.ts","./src/app/shared/sub-sink.ts","./src/app/shared/utils/utils.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { PublicationstComponent } from './pages/tiktok/publications/publications.component';\r\nimport { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { Page404Component } from \"./pages/home/page404/page404.component\";\r\n\r\nimport { HomeComponent } from \"./pages/home/home.component\";\r\nimport { SelectComponent } from \"./pages/home/select/select.component\";\r\nimport { FacebookComponent } from \"./pages/facebook/facebook.component\";\r\nimport { TiktokComponent } from \"./pages/tiktok/tiktok.component\";\r\nimport { PublicationsComponent } from \"./pages/facebook/publications/publications.component\";\r\n\r\n \r\n\r\nimport { MyPublicationsComponent } from \"./pages/facebook/my-publications/my-publications.component\";\r\nimport { MyPublicationstComponent } from './pages/tiktok/my-publications/my-publications.component';\r\nimport { AuthGuard } from './guards/auth.guard';\r\n\r\n\r\nconst routes: Routes = [\r\n \r\n  {\r\n    path: \"\",\r\n    redirectTo: \"auth\",\r\n    pathMatch: \"full\",\r\n  },\r\n  {\r\n    path: \"auth\",\r\n    loadChildren: () =>\r\n      import(\"./pages/auth/auth.module\").then((m) => m.AuthModule),\r\n  },\r\n\r\n  {\r\n    path: \"home\",\r\n    component: HomeComponent,\r\n    canActivate:[AuthGuard],\r\n    canLoad:[AuthGuard],\r\n    children: [\r\n      { path: \"\", redirectTo: \"select\", pathMatch: \"full\" },\r\n      { path: \"select\", component: SelectComponent },\r\n      {\r\n        path: \"bookface\",\r\n        component: FacebookComponent,\r\n        canActivate:[AuthGuard],\r\n        children: [\r\n          { path: \"\", redirectTo: \"public\", pathMatch: \"full\" },\r\n          { path: \"public\", component: PublicationsComponent, canActivate:[AuthGuard], },\r\n          { path: \"myposts\", component: MyPublicationsComponent, canActivate:[AuthGuard], }\r\n        ],\r\n      },\r\n      { \r\n        path: \"toktik\", \r\n        component: TiktokComponent ,\r\n        canActivate:[AuthGuard],\r\n        children: [\r\n          { path: \"\", redirectTo: \"public\", pathMatch: \"full\" },\r\n          { path: \"public\", component: PublicationstComponent, canActivate:[AuthGuard], },\r\n          { path: \"myposts\", component: MyPublicationstComponent, canActivate:[AuthGuard],}\r\n      ],\r\n    }  \r\n    ],\r\n  },\r\n  { path: \"**\", component: Page404Component },\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: \"legacy\" })],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from \"@angular/core\";\r\nimport { Event, Router, NavigationStart, NavigationEnd } from \"@angular/router\";\r\nimport { PlatformLocation } from \"@angular/common\";\r\n@Component({\r\n  selector: \"app-root\",\r\n  templateUrl: \"./app.component.html\",\r\n  styleUrls: [\"./app.component.scss\"],\r\n})\r\nexport class AppComponent {\r\n  currentUrl: string;\r\n  constructor(public _router: Router, location: PlatformLocation) {\r\n    this._router.events.subscribe((routerEvent: Event) => {\r\n      if (routerEvent instanceof NavigationStart) {\r\n        // location.onPopState(() => {\r\n        //   window.location.reload();\r\n        // });\r\n        this.currentUrl = routerEvent.url.substring(\r\n          routerEvent.url.lastIndexOf(\"/\") + 1\r\n        );\r\n      }\r\n      if (routerEvent instanceof NavigationEnd) {\r\n      }\r\n      window.scrollTo(0, 0);\r\n    });\r\n  }\r\n}\r\n","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Document</title>\r\n</head>\r\n<body >\r\n  <router-outlet></router-outlet>  \r\n</body>\r\n</html>\r\n\r\n","import { NgModule } from \"@angular/core\";\r\nimport { SharedModule } from \"./shared/shared.module\";\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { AppRoutingModule } from \"./app-routing.module\";\r\nimport { AppComponent } from \"./app.component\";\r\n\r\nimport { LocationStrategy, HashLocationStrategy } from \"@angular/common\";\r\nimport {\r\n  PerfectScrollbarModule,\r\n  PERFECT_SCROLLBAR_CONFIG,\r\n  PerfectScrollbarConfigInterface,\r\n} from \"ngx-perfect-scrollbar\";\r\nimport { TranslateModule, TranslateLoader } from \"@ngx-translate/core\";\r\nimport { TranslateHttpLoader } from \"@ngx-translate/http-loader\";\r\nimport { ClickOutsideModule } from \"ng-click-outside\";\r\nimport {\r\n  HttpClientModule,\r\n  HTTP_INTERCEPTORS,\r\n  HttpClient,\r\n} from \"@angular/common/http\";\r\n\r\nimport { LoadingBarRouterModule } from \"@ngx-loading-bar/router\";\r\nimport { AuthModule } from './pages/auth/auth.module';\r\n\r\nimport { MatAutocompleteModule } from \"@angular/material/autocomplete\";\r\nimport { HomeModule } from \"./pages/home/home.module\";\r\nimport { DialogSigninComponent } from \"./pages/dialogs/dialog-signin/dialog-signin.component\";\r\n\r\nimport { InputFileConfig, InputFileModule } from 'ngx-input-file';\r\nconst config: InputFileConfig = {\r\n  fileAccept: '*'\r\n};\r\n\r\n\r\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\r\n  suppressScrollX: true,\r\n  wheelPropagation: false,\r\n};\r\n\r\nexport function createTranslateLoader(http: HttpClient): any {\r\n  return new TranslateHttpLoader(http, \"assets/i18n/\", \".json\");\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    DialogSigninComponent\r\n\r\n    \r\n    \r\n  ],\r\n  imports: [\r\n    MatAutocompleteModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    PerfectScrollbarModule,\r\n    ClickOutsideModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: createTranslateLoader,\r\n        deps: [HttpClient],\r\n      },\r\n    }),\r\n    LoadingBarRouterModule,\r\n    // core & shared\r\n    SharedModule,\r\n    AuthModule,\r\n    HomeModule,\r\n    BrowserAnimationsModule,\r\n    InputFileModule.forRoot(config),\r\n  ],\r\n  providers: [\r\n    { provide: LocationStrategy, useClass: HashLocationStrategy },\r\n    {\r\n      provide: PERFECT_SCROLLBAR_CONFIG,\r\n      useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG,\r\n    },\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, CanLoad, Route, Router, RouterStateSnapshot, UrlSegment, UrlTree } from '@angular/router';\r\nimport { Observable, map, take, tap } from 'rxjs';\r\nimport { LoginService } from '../service/login.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate,CanLoad {\r\n\r\n  constructor(private loginService:LoginService,\r\n               private router:Router){}\r\n  canLoad(route: Route, segments: UrlSegment[]): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\r\n    this.loginService.checkToken();\r\n\r\n    return this.loginService.token$.pipe(\r\n      take(1),\r\n      map((token:string) => {\r\n        if(token === \"\" || token === null){\r\n          this.router.navigate(['/auth/signin'])\r\n          return false\r\n        }else{\r\n          return true;\r\n        }\r\n        // token == \"\" ? false :true\r\n      })\r\n    )\r\n  \r\n  }\r\n  // if(!this.loginService.checkToken()){\r\n\r\n  // }\r\n  // //efecto secundario  \r\n  // if(!estaAutenticado){\r\n  //     this.router.navigateByUrl('/login')\r\n  //   }\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot) {\r\n    this.loginService.checkToken();\r\n    //validar el token  \r\n    return this.loginService.token$.pipe(\r\n      take(1),\r\n      map((token:string) => {\r\n        if(token === \"\" || token === null){\r\n          this.router.navigate(['/auth/signin'])\r\n          return false;\r\n        }else{\r\n          return true;\r\n        }\r\n        // token == \"\" ? false :true\r\n      })\r\n    )\r\n  }\r\n  \r\n}\r\n","export class CommentDTO{\r\n    idComment:number;\r\n    descripcion:string;\r\n    multipartFile:File;\r\n    numLike:number;\r\n    multimedia:string;\r\n    user:number;\r\n    post:number\r\n}","export class Post {\r\n    idPost:number;\r\n    description:string;\r\n    numLike:number;\r\n    multimedia:any;\r\n    share:number;\r\n    user:any;\r\n    dateRegistration:Date\r\n}","// Modelo para el usuario\r\nexport class User{\r\n    public id_user?: number;\r\n    public name?: string;\r\n    public email?: string;\r\n    public password?: string;\r\n    // Se ponse tipo any pero es boleano por el \r\n    // form data\r\n    public confirmed?: any;\r\n    public email_verified?: string;\r\n    public multi_factor_authentication?: string;\r\n    public father_last_name?: string;\r\n    public mother_last_name?: string;\r\n    public age?: string;\r\n    // Se ponse tipo any pero es Date por el \r\n    // form data\r\n    public date_birth?: any;\r\n    public avatar?: File;\r\n}","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthComponent } from './auth.component';\r\nimport { SigninComponent } from './signin/signin.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { RecoverPasswordComponent } from './recover-password/recover-password.component';\r\nimport { ChangePasswordComponent } from './change-password/change-password.component';\r\nimport { ConfirmAccountComponent } from './confirm-account/confirm-account.component';\r\n\r\nconst routes: Routes = [\r\n  \r\n  {\r\n    path: '',\r\n    redirectTo: 'signin',\r\n    pathMatch: 'full',\r\n  },\r\n  {\r\n    path: 'signin',\r\n    component: SigninComponent\r\n  },\r\n  {\r\n    path: 'signup',\r\n    component: SignupComponent\r\n  },\r\n  { path: 'confirm/:emailVerified', \r\n    component:ConfirmAccountComponent\r\n  }, \r\n  {\r\n    path: 'recover-pass',\r\n    component: RecoverPasswordComponent\r\n  },\r\n  {\r\n    path: 'change-pass/:tokenPassword',\r\n    component: ChangePasswordComponent\r\n  },\r\n  ];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.scss']\r\n})\r\nexport class AuthComponent {\r\n\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { AuthRoutingModule } from \"./auth-routing.module\";\r\nimport { AuthComponent } from \"./auth.component\";\r\nimport { SigninComponent } from \"./signin/signin.component\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatBadgeModule } from \"@angular/material/badge\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { SignupComponent } from \"./signup/signup.component\";\r\nimport { RecoverPasswordComponent } from \"./recover-password/recover-password.component\";\r\nimport { ChangePasswordComponent } from \"./change-password/change-password.component\";\r\nimport { ConfirmAccountComponent } from './confirm-account/confirm-account.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AuthComponent,\r\n    SigninComponent,\r\n    SignupComponent,\r\n    RecoverPasswordComponent,\r\n    ChangePasswordComponent,\r\n    ConfirmAccountComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    AuthRoutingModule,\r\n    MatBadgeModule,\r\n    MatDialogModule,\r\n  ],\r\n})\r\nexport class AuthModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n \r\nimport { LoginService } from '../../../service/login.service';\r\nimport { AlertsService } from '../../../service/alerts.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Component({\r\n  selector: 'app-change-password',\r\n  templateUrl: './change-password.component.html',\r\n  styleUrls: ['./change-password.component.scss']\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n  authForm: FormGroup;\r\n  submitted = false;\r\n  returnUrl: string;\r\n  hide = true;\r\n  chide = true;\r\n  public tokenPassword:string = '';  \r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private matDialog:MatDialog,\r\n    private loginService:LoginService,\r\n    private alertsService:AlertsService\r\n  ) {}\r\n  ngOnInit() {\r\n    // Formulario para la nueva contraseña\r\n    this.authForm = this.formBuilder.group(\r\n      {\r\n        password: ['', Validators.required,this.validatePassword],\r\n        cpassword: ['', Validators.required,this.checkPasswords],\r\n      });\r\n    // get return url from route parameters or default to '/'\r\n    // Toma los parámetros de nuestra URL\r\n    this.tokenPassword = this.route.snapshot.paramMap.get('tokenPassword')!;\r\n    // Verificamos en el Backend\r\n    this.checkTokenPassword(this.tokenPassword);\r\n  }\r\n\r\n  // Método para checa el token \r\n  checkTokenPassword(token:string){\r\n    this.loginService.checkTokenPassword(token).subscribe(data=>{\r\n      console.log(data)\r\n      if(!data.ok){\r\n        // Si no esta bien lo redirigimos al inicio de sesion\r\n        this.alertsService.errorMessage('Token!','Token No valido');\r\n        this.router.navigateByUrl('/auth/signin')\r\n      }\r\n    })\r\n  }\r\n\r\n  // Checa si la contraseña es igual o no -\r\n  validatePassword(control: FormControl): Promise<any> | Observable<any> {\r\n    const password = control.value;\r\n    const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/;    \r\n    return new Promise((resolve) => {\r\n      if (passwordRegex.test(password)) {\r\n        resolve(null);\r\n      } else {\r\n        resolve({ invalidPassword: true });\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  checkPasswords(control: FormControl): Promise<any> | Observable<any> {\r\n    const password = control.root.get('password')?.value;\r\n    const confirmPassword = control.value;\r\n    console.log(password)\r\n    console.log(confirmPassword)\r\n    return new Promise((resolve) => {\r\n      if (password === confirmPassword) {\r\n        resolve(null);\r\n      } else {        \r\n        resolve({ invalidPassword: true });\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n\r\n  // checkPasswords(group: FormGroup) {\r\n  //   let pass = group.get(\"password\")?.value;\r\n  //   let confirmPass = group.get(\"cpassword\")?.value;\r\n  //   return pass === confirmPass ? null : { notSame: true };\r\n  // }\r\n\r\n  get f() {\r\n    return this.authForm.controls;\r\n  }\r\n  // Enviamos la nueva contraseña\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.authForm.valid) {   \r\n      // Enviamos la petición al back \r\n      this.loginService.newPassword(this.tokenPassword,this.authForm.value).subscribe(data=>{\r\n        if(data){\r\n          this.alertsService.succesMessage('Felicidades',data.msg);\r\n          this.router.navigateByUrl('/auth/signin');\r\n        }\r\n      })      \r\n      // this.openDialog()\r\n\r\n  }\r\n\r\n\r\n  }\r\n}\r\n","<div class=\"auth-container\">\r\n  <div class=\"row auth-main\">\r\n    <div class=\"col-sm-6 px-0 d-none d-sm-block\">\r\n      <div\r\n        class=\"left-img\"\r\n        style=\"background-image: url(assets/images/pages/SH.png)\"\r\n      ></div>\r\n    </div>\r\n    <div class=\"col-sm-6 auth-form-section text\">\r\n      <div class=\"form-section\">\r\n        <div class=\"auth-wrapper\">\r\n          <h1 class=\"welcome-msg text-center\">Cambiar contraseña</h1>\r\n          <p class=\"auth-signup-text text-muted\">\r\n            Para poder recuperar la contraseña, es necesario agregar una nueva\r\n            contraseña\r\n          </p>\r\n          <form\r\n            class=\"validate-form\"\r\n            [formGroup]=\"authForm\"\r\n            (ngSubmit)=\"onSubmit()\"\r\n          >\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Nueva contraseñe</mat-label>\r\n                  <input\r\n                    matInput\r\n                    formControlName=\"password\"\r\n                    [type]=\"hide ? 'password' : 'text'\"\r\n                    required\r\n                  />\r\n                  <mat-icon matSuffix (click)=\"hide = !hide\">\r\n                    {{ hide ? \"visibility_off\" : \"visibility\" }}\r\n                  </mat-icon>\r\n                  <mat-error\r\n                    *ngIf=\"authForm.get('password').hasError('required')\"\r\n                  >\r\n                  La contraseña es requerida\r\n                  </mat-error>\r\n                  <mat-error\r\n                    *ngIf=\"authForm.get('password').hasError('invalidPassword')\"\r\n                  >\r\n                    La contraseña debe cumplir con los siguientes requisitos: Al\r\n                    menos una letra mayúscula o minúscula. Al menos un dígito.\r\n                    Al menos un carácter especial de los siguientes: @, $, !, %,\r\n                    *, #, ? o &. Debe tener una longitud mínima de 8 caracteres.\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row mt-3\">\r\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Confirma la nueva contraseña.</mat-label>\r\n                  <input\r\n                    matInput\r\n                    formControlName=\"cpassword\"\r\n                    [type]=\"hide ? 'password' : 'text'\"\r\n                    required\r\n                  />\r\n                  <mat-icon matSuffix (click)=\"hide = !hide\">\r\n                    {{ hide ? \"visibility_off\" : \"visibility\" }}\r\n                  </mat-icon>\r\n                  <mat-error\r\n                    *ngIf=\"authForm.get('cpassword').hasError('required')\"\r\n                  >\r\n                 Confirma la nueva contraseña\r\n                </mat-error>\r\n                <mat-error\r\n                    *ngIf=\"authForm.get('password').hasError('invalidPassword')\"\r\n                  >\r\n                    Las contraseñas no coinciden\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"flex-sb-m w-full p-b-20\">\r\n              <div>\r\n                <span\r\n                  >¿Ya estás registrado?\r\n                  <a routerLink=\"/auth/signin\">Acceder</a></span\r\n                >\r\n              </div>\r\n            </div>\r\n            <div class=\"container-auth-form-btn\">\r\n              <button\r\n                mat-flat-button\r\n                color=\"primary\"\r\n                class=\"auth-form-btn\"\r\n                [disabled]=\"!authForm.valid\"\r\n                type=\"submit\"\r\n              >\r\n                Cambiar contraseña\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { LoginService } from '../../../service/login.service';\r\nimport { AlertsService } from '../../../service/alerts.service';\r\n\r\n@Component({\r\n  selector: 'app-confirm-account',\r\n  templateUrl: './confirm-account.component.html',\r\n  styleUrls: ['./confirm-account.component.scss']\r\n})\r\nexport class ConfirmAccountComponent implements OnInit {\r\n\r\n  tokenValidacion: string = \"\";\r\n\r\n  constructor(private route: ActivatedRoute, private loginService: LoginService,\r\n    private router: Router, private alertsService: AlertsService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.checkTokenEmail();\r\n  }\r\n  // Checa si el token esta correctamente bien\r\n  checkTokenEmail() {\r\n    // Obtenemos el parametro\r\n    this.tokenValidacion = this.route.snapshot.paramMap.get('emailVerified')!;\r\n    console.log(\"Token\" + this.tokenValidacion);\r\n    // Verificamos en el back\r\n    this.loginService.confirmEmail(this.tokenValidacion).subscribe(data => {\r\n      console.log(data)\r\n      if (!data.ok) {\r\n        this.alertsService.errorMessage('Token', 'Token no Valido');\r\n      }\r\n      this.router.navigateByUrl('/auth/signin')\r\n      if (data.ok) {\r\n        this.alertsService.succesMessage('Tu cuenta ha sido confirmada!', 'Ya puedes iniciar sesión');\r\n      }\r\n      this.router.navigateByUrl('/auth/signin')\r\n    })\r\n\r\n  }\r\n\r\n\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { LoginService } from '../../../service/login.service';\r\nimport { AlertsService } from '../../../service/alerts.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: \"app-recover-password\",\r\n  templateUrl: \"./recover-password.component.html\",\r\n  styleUrls: [\"./recover-password.component.scss\"],\r\n})\r\nexport class RecoverPasswordComponent implements OnInit {\r\n  authForm: FormGroup;\r\n  submitted = false;\r\n  returnUrl: string;\r\n  hide = true;\r\n  chide = true;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private loginService:LoginService,\r\n    private alertsService:AlertsService,\r\n    private matDialog: MatDialog\r\n  ) {}\r\n  ngOnInit() {\r\n    this.authForm = this.formBuilder.group({\r\n      email: [\r\n        \"\",\r\n        [Validators.required, Validators.email, Validators.minLength(5)],\r\n      ],\r\n    });\r\n    // get return url from route parameters or default to '/'\r\n    this.returnUrl = this.route.snapshot.queryParams[\"returnUrl\"] || \"/\";\r\n  }\r\n\r\n  checkPasswords(group: FormGroup) {\r\n    let pass = group.get(\"password\")?.value;\r\n    let confirmPass = group.get(\"cpassword\")?.value;\r\n    return pass === confirmPass ? null : { notSame: true };\r\n  }\r\n\r\n  get f() {\r\n    return this.authForm.controls;\r\n  }\r\n  // Enviamos la petición al backend para que nos envie el correo\r\n  onSubmit() {   \r\n    this.loginService.forgetPassword(this.authForm.value).subscribe(data=>{\r\n      if(data.ok){\r\n        this.alertsService.succesMessage('',data.msg);  \r\n      }\r\n      if(!data.ok){\r\n        this.alertsService.warningMessage(data.msg);\r\n      }\r\n    })\r\n    // this.submitted = true;\r\n    // // stop here if form is invalid\r\n    // if (this.authForm.valid) {\r\n    //   this.openDialog();\r\n    // }\r\n\r\n\r\n\r\n  // onSubmit() {\r\n  //   this.submitted = true;\r\n  //   // stop here if form is invalid\r\n  //   if (this.authForm.valid) {\r\n      \r\n  //   }\r\n  // }\r\n\r\n  }\r\n}\r\n","<div class=\"auth-container\">\r\n    <div class=\"row auth-main\">\r\n      <div class=\"col-sm-6 px-0 d-none d-sm-block\">\r\n        <div class=\"left-img\" style=\"background-image: url(assets/images/pages/SH.png);\">\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-6 auth-form-section text\">\r\n        <div class=\"form-section\">\r\n          <div class=\"auth-wrapper\">\r\n            <h1 class=\"welcome-msg text-center\"> Recuperar contraseña </h1>\r\n            <p class=\"auth-signup-text text-muted text text-Justified\">Agrega el correo electrónico para enviarte un código y de esa manera recuperar tu contraseña</p>\r\n            <form class=\"validate-form\" [formGroup]=\"authForm\" (ngSubmit)=\"onSubmit()\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                      <mat-label>Email</mat-label>\r\n                      <input matInput formControlName=\"email\" required>\r\n                      <mat-error *ngIf=\"authForm.get('email').hasError('required') || authForm.get('email').touched\">\r\n                       Por favor ingresa el correo electrónico\r\n                      </mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div class=\"flex-sb-m w-full p-b-20\">\r\n                  <div>\r\n                    <span>¿Ya estás registrado? <a routerLink=\"/auth/signin\">Acceder</a></span>\r\n                  </div>\r\n                </div>\r\n                <div class=\"container-auth-form-btn\">\r\n                  <button mat-flat-button color=\"primary\" class=\"auth-form-btn\" [disabled]=\"!authForm.valid\" type=\"submit\">\r\n                    Enviar Correo\r\n                  </button>\r\n                </div>\r\n              </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  \r\n    </div>\r\n  </div>\r\n  ","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { UnsubscribeOnDestroyAdapter } from \"src/app/shared/UnsubscribeOnDestroyAdapter\";\r\nimport { LoginService } from '../../../service/login.service';\r\nimport { AlertsService } from '../../../service/alerts.service';\r\nimport { DialogSigninComponent } from \"../../dialogs/dialog-signin/dialog-signin.component\";\r\n\r\n@Component({\r\n  selector: \"app-signin\",\r\n  templateUrl: \"./signin.component.html\",\r\n  styleUrls: [\"./signin.component.scss\"],\r\n})\r\nexport class SigninComponent\r\n  extends UnsubscribeOnDestroyAdapter\r\n  implements OnInit\r\n{\r\n  authForm: FormGroup;\r\n  submitted = false;\r\n  loading = false;\r\n  error = \"\";\r\n  hide = true;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private matDialog: MatDialog ,\r\n    private router: Router,\r\n    private loginService:LoginService,\r\n    private alertsService:AlertsService\r\n    \r\n  ) {\r\n    super();\r\n  }\r\n\r\n  emailPattern = /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$/;\r\n\r\n\r\n  ngOnInit() {\r\n    this.authForm = this.formBuilder.group({\r\n      email: [\"\", [Validators.required,Validators.email, Validators.pattern(this.emailPattern)]],\r\n      password: [\"\", Validators.required],\r\n    });\r\n  }\r\n  get f() {\r\n    return this.authForm.controls;\r\n  }\r\n  // adminSet() {\r\n  //   this.authForm.get(\"username\").setValue(\"admin@software.com\");\r\n  //   this.authForm.get(\"password\").setValue(\"admin@123\");\r\n  // }\r\n  // employeeSet() {\r\n  //   this.authForm.get(\"username\").setValue(\"employee@software.com\");\r\n  //   this.authForm.get(\"password\").setValue(\"employee@123\");\r\n  // }\r\n  // clientSet() {\r\n  //   this.authForm.get(\"username\").setValue(\"client@software.com\");\r\n  //   this.authForm.get(\"password\").setValue(\"client@123\");\r\n  // }\r\n  onSubmit() {\r\n    // Estas variables son para que se muestre el spiner\r\n    this.submitted = true;\r\n    this.loading = true;\r\n\r\n    // Nos comunicamos con el backend\r\n    this.loginService.login(this.authForm.value.email, this.authForm.value.password).subscribe(data=>{\r\n      if(!data.ok){\r\n        this.alertsService.warningMessage(data.msg);\r\n        this.loading = false;\r\n        return;\r\n      }\r\n      if(data.ok){\r\n        this.alertsService.succesMessage('El código de verificación se envió a tu correo!',data.msg);\r\n        this.loading = false;\r\n        this.openDialogC()  \r\n      }\r\n      this.loading = false;\r\n  },error =>{\r\n    console.log(error)\r\n    this.loading = false;\r\n  })\r\n  // this.openDialogC()  \r\n\r\n\r\n    // this.submitted = true;\r\n    // this.loading = true;\r\n\r\n    // this.openDialogC()\r\n\r\n    // this.loading = false;\r\n  }\r\n\r\n  //Open dialogo de code signin\r\n  openDialogC(){\r\n    const dialogConfig: MatDialogConfig<any> = {\r\n      maxWidth: '100vw',\r\n      maxHeight: '100vh',\r\n      panelClass: 'full-screen-dialog',\r\n    };\r\n    dialogConfig.disableClose = true;\r\n    dialogConfig.data = this.authForm.value;\r\n    // Example usage\r\n    this.matDialog.open(DialogSigninComponent, dialogConfig);\r\n  }\r\n}\r\n","<div class=\"auth-container text\">\r\n    <div class=\"row auth-main\">\r\n      <div class=\"col-sm-6 px-0 d-none d-sm-block\">\r\n        <div class=\"left-img\" style=\"background-image: url(assets/images/pages/SH.png);\">\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-6 auth-form-section\">\r\n        <div class=\"form-section\">\r\n          <div class=\"auth-wrapper\">\r\n            <h1 class=\"welcome-msg text text-center\"> Iniciar sesión </h1>\r\n            <p class=\"auth-signup-text text-muted\">¿Necesita una cuenta?<a routerLink=\"/auth/signup\"\r\n                class=\"sign-up-link\">Registrarse\r\n              </a></p>\r\n            <form class=\"validate-form\" [formGroup]=\"authForm\" (ngSubmit)=\"onSubmit()\">\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                    <mat-label>Correo</mat-label>\r\n                    <input matInput formControlName=\"email\" />\r\n                    <mat-error *ngIf=\"authForm.get('email').hasError('required') || authForm.get('email').touched\">\r\n                      Por favor, introduce una dirección de correo electrónico válida\r\n                  </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                    <mat-label>Contraseña</mat-label>\r\n                    <input matInput [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\">\r\n                    <a class=\"show-pwd-icon\" href=\"#\" onClick=\"return false;\" matSuffix (click)=\"hide = !hide\"\r\n                      [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\r\n                      <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                    </a>\r\n                    <mat-error *ngIf=\"authForm.get('password').hasError('required')\">\r\n                      La contraseña es obligatoria \r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"d-flex justify-content-between align-items-center mb-5\">\r\n                <div class=\"form-check\">\r\n                </div>\r\n                <a class=\"txt1\" routerLink=\"/auth/recover-pass\">¿Has olvidado tu contraseña?</a>\r\n              </div>\r\n              <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-0\">{{error}}</div>\r\n              <div class=\"container-auth-form-btn\">\r\n                <div style=\"text-align:center\">\r\n                  <button mat-raised-button color=\"primary\" [class.auth-spinner]=\"loading\" [disabled]=\"loading\"\r\n                    class=\"auth-form-btn\" [disabled]=\"!authForm.valid \" type=\"submit\">Iniciar Sesión</button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div> \r\n    </div>\r\n  </div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { User } from \"src/app/models/user\";\r\nimport { Observable } from \"rxjs\";\r\nimport { LoginService } from \"src/app/service/login.service\";\r\nimport {HttpResponse } from \"@angular/common/http\";\r\nimport { ErroresService } from \"src/app/service/errores.service\";\r\nimport { Respuesta } from \"src/app/models/respuesta\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n@Component({\r\n  selector: \"app-signup\",\r\n  templateUrl: \"./signup.component.html\",\r\n  styleUrls: [\"./signup.component.scss\"],\r\n})\r\nexport class SignupComponent implements OnInit {\r\n\r\n  authForm: FormGroup; // nombre del formulario group\r\n  submitted = false;\r\n  hide = true;\r\n  chide = true;\r\n  emailPattern = /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$/;\r\n\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private matDialog:MatDialog,\r\n    private servSignup:LoginService,\r\n    private erres:ErroresService\r\n  ) {}\r\n  ngOnInit() {\r\n\r\n    // Funcion que permite esta evaluando los campos en tiempo real\r\n    this.authForm = this.formBuilder.group(\r\n      {\r\n        username: ['', Validators.required],\r\n        email: [\r\n          '',\r\n          [Validators.required, Validators.email, Validators.pattern(this.emailPattern),],\r\n        ],\r\n        password: ['', Validators.required, this.validatePassword,],\r\n        cpassword: ['', Validators.required,this.checkPasswords],\r\n      });\r\n    // get return url from route parameters or default to '/'\r\n    \r\n  }\r\n\r\n  // Metodo que nos permite saber si a contraseña cumpre con las politicas \r\n  validatePassword(control: FormControl): Promise<any> | Observable<any> {\r\n    const password = control.value;\r\n    const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/;\r\n    \r\n    return new Promise((resolve) => {\r\n      if (passwordRegex.test(password)) {\r\n        resolve(null);\r\n      } else {\r\n        resolve({ invalidPassword: true });\r\n      }\r\n    });\r\n  }\r\n  \r\n  // Metodo que nos ayuda a saber si las contraseñas coinseiden \r\n  checkPasswords(control: FormControl): Promise<any> | Observable<any> {\r\n    const password = control.root.get('password')?.value;\r\n    const confirmPassword = control.value;\r\n    return new Promise((resolve) => {\r\n      if (password === confirmPassword) {\r\n        resolve(null);\r\n      } else {\r\n        resolve({ invalidPassword: true });\r\n      }\r\n    });\r\n\r\n  }\r\n  \r\n  \r\n  // Metodo que se llama al dar clic de crear usuario\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.authForm.valid) {\r\n      const newUser = this.getFormData()\r\n      console.log(newUser)\r\n      this.servSignup.createUser(newUser).subscribe(data=>{\r\n        if(data.ok){\r\n\r\n          return Swal.fire('',data.msg,'success');\r\n        }else {\r\n\r\n          return Swal.fire('',data.msg,'error');\r\n        }         \r\n      })               \r\n          \r\n    }\r\n  }   \r\n  \r\n\r\n  // Metodo que nos permite optener los datos del formulario y los retorna en un objeto User\r\n  getFormData():User{\r\n    const username = this.authForm.get('username')?.value;\r\n    const e_mail = this.authForm.get('email')?.value;\r\n    const password = this.authForm.get('password')?.value;\r\n\r\n    const newUser:User={\r\n      name: username,\r\n      email: e_mail,\r\n      password: password,\r\n    }\r\n    return newUser\r\n  }\r\n}\r\n","<div class=\"auth-container\">\r\n  <div class=\"row auth-main\">\r\n    <div class=\"col-sm-6 px-0 d-none d-sm-block\">\r\n      <div\r\n        class=\"left-img\"\r\n        style=\"background-image: url(assets/images/pages/SH.png)\"\r\n      ></div>\r\n    </div>\r\n    <div class=\"col-sm-6 auth-form-section text\">\r\n      <div class=\"form-section\">\r\n        <div class=\"auth-wrapper\">\r\n          <h1 class=\"welcome-msg text-center\">Inscripción</h1>\r\n          <p class=\"auth-signup-text text-muted\">\r\n            Llenar todo el formulario para realizar tu inscripción\r\n          </p>\r\n          <form\r\n            class=\"validate-form\"\r\n            [formGroup]=\"authForm\"\r\n            (ngSubmit)=\"onSubmit()\"\r\n          >\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Nombre del usuario</mat-label>\r\n                  <input matInput formControlName=\"username\" required maxlength=\"50\"/>\r\n                  <mat-error\r\n                    *ngIf=\"authForm.get('username').hasError('required')\"\r\n                  >\r\n                    El nombre del usuario es requerido\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Email</mat-label>\r\n                  <input matInput formControlName=\"email\" required maxlength=\"50\"/>\r\n                  <mat-error\r\n                    *ngIf=\"\r\n                      authForm.get('email').hasError('required') ||\r\n                      authForm.get('email').touched\r\n                    \"\r\n                  >\r\n                    Por favor, introduce una dirección de correo electrónico\r\n                    válida\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Contraseña</mat-label>\r\n                  <input\r\n                    matInput\r\n                    formControlName=\"password\"\r\n                    [type]=\"hide ? 'password' : 'text'\"\r\n                    required\r\n                  />\r\n                  <mat-icon matSuffix (click)=\"hide = !hide\">\r\n                    {{ hide ? \"visibility_off\" : \"visibility\" }}\r\n                  </mat-icon>\r\n                  <mat-error\r\n                    *ngIf=\"authForm.get('password').hasError('required')\"\r\n                  >\r\n                    La contraseña es requerida\r\n                  </mat-error>\r\n                  <mat-error\r\n                    *ngIf=\"authForm.get('password').hasError('invalidPassword')\"\r\n                  >\r\n                    La contraseña debe cumplir con los siguientes requisitos: Al\r\n                    menos una letra mayúscula o minúscula. Al menos un dígito.\r\n                    Al menos un carácter especial de los siguientes: @, $, !, %,\r\n                    *, #, ? o &. Debe tener una longitud mínima de 8 caracteres.\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row mt-3\">\r\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Confirma tu contraseña</mat-label>\r\n                  <input\r\n                    matInput\r\n                    formControlName=\"cpassword\"\r\n                    [type]=\"hide ? 'password' : 'text'\"\r\n                    required\r\n                  />\r\n                  <mat-icon matSuffix (click)=\"hide = !hide\">\r\n                    {{ hide ? \"visibility_off\" : \"visibility\" }}\r\n                  </mat-icon>\r\n                  <mat-error\r\n                    *ngIf=\"authForm.get('cpassword').hasError('required')\"\r\n                  >\r\n                    Confirmar contraseña es requerida\r\n                  </mat-error>\r\n                  <mat-error\r\n                    *ngIf=\"authForm.get('password').hasError('invalidPassword')\"\r\n                  >\r\n                    Las contraseñas no coinciden\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"flex-sb-m w-full p-b-20\">\r\n              <div>\r\n                <span\r\n                  >¿Ya estás registrado?\r\n                  <a routerLink=\"/auth/signin\">Acceder</a></span\r\n                >\r\n              </div>\r\n            </div>\r\n            <div class=\"container-auth-form-btn\">\r\n              <button\r\n                mat-flat-button\r\n                color=\"primary\"\r\n                class=\"auth-form-btn\"\r\n                [disabled]=\"!authForm.valid\"\r\n                type=\"submit\"\r\n              >\r\n                Registrarse\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { Router } from \"@angular/router\";\r\nimport { SigninComponent } from \"../../auth/signin/signin.component\";\r\nimport { LoginService } from \"src/app/service/login.service\";\r\nimport { AlertsService } from '../../../service/alerts.service';\r\n\r\n@Component({\r\n  selector: \"app-dialog-signin\",\r\n  templateUrl: \"./dialog-signin.component.html\",\r\n  styleUrls: [\"./dialog-signin.component.scss\"],\r\n})\r\nexport class DialogSigninComponent implements OnInit {\r\n  //Se difine la variable del formGrup\r\n  codeAuthForm: FormGroup;\r\n  fields: FormControl[];\r\n  errorInput: boolean = false;\r\n  textErrorCode = \"\";\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<SigninComponent>,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private alertsService: AlertsService,\r\n    private loginService: LoginService,\r\n    private matDialogRef: MatDialogRef<DialogSigninComponent>\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.data)\r\n    // Formulario de 8 caracteres para nuestro token de 8 caracteres \r\n    this.codeAuthForm = this.formBuilder.group({\r\n      code1: [\"\", [Validators.required]],\r\n      code2: [\"\", [Validators.required]],\r\n      code3: [\"\", [Validators.required]],\r\n      code4: [\"\", [Validators.required]],\r\n      code5: [\"\", [Validators.required]],\r\n      code6: [\"\", [Validators.required]],\r\n      code7: [\"\", [Validators.required]],\r\n      code8: [\"\", [Validators.required]],\r\n    })   \r\n    //Se difinen los campos del formulario y sus restricciones.\r\n    this.codeAuthForm = this.formBuilder.group({\r\n      code1: [\"\", [Validators.required, Validators.minLength(8)]],\r\n    });\r\n\r\n    //Funcion para validar si se cumple la condiciones del formulario\r\n    this.codeAuthForm.valueChanges.subscribe(() => {\r\n      this.checkFormCompletion();\r\n    });\r\n  }\r\n\r\n  //Metodo que nos permite evaluar y dirigir si se cumple el formulario\r\n  checkFormCompletion() {\r\n\r\n    if (this.codeAuthForm.valid) {\r\n      // Obtenemos cada carácter del modal\r\n      const { code1, code2, code3, code4, code5, code6, code7, code8 } = this.codeAuthForm.value\r\n      // Contruimos el token\r\n      const token = `${code1}`\r\n      console.log(token)\r\n      const checkSendToken = {\r\n        email: this.data.email,\r\n        multi_factor_authentication: token\r\n      };\r\n      // Lo enviemos al backend\r\n      this.loginService.doubleAuthentication(checkSendToken).subscribe(data => {\r\n        if (!data.ok) {\r\n          this.alertsService.warningMessage(data.msg);\r\n          return;\r\n        }\r\n        if (data.ok) {\r\n          // Si esta bien cerramos el modal y lo redirigimos al login\r\n          this.closeDialog();\r\n          this.router.navigateByUrl(\"/home\");\r\n          this.errorInput = false;\r\n          this.textErrorCode = \"\";\r\n        }\r\n      })  \r\n    } else {\r\n      // Mandamos el mensaje de que debe ingresar los 8 caracteres\r\n      this.errorInput = true;\r\n      this.textErrorCode = \"Agrega los 8 dígitos del código \";\r\n    }\r\n  }\r\n\r\n  //Metodo para cerrar este dialog\r\n  closeDialog() {\r\n    this.matDialogRef.close();\r\n  }\r\n  handlePaste(event: ClipboardEvent) {\r\n    const clipboardData = event.clipboardData;\r\n    const pastedText = clipboardData.getData(\"text\");\r\n\r\n    // Verificar si el texto pegado solo contiene números    \r\n    if (/^\\d+$/.test(pastedText) && pastedText.length === 7) {\r\n      // Rellenar los campos del formulario\r\n      this.codeAuthForm.patchValue({\r\n        code1: pastedText.charAt(0),\r\n        code2: pastedText.charAt(1),\r\n        code3: pastedText.charAt(2),\r\n        code4: pastedText.charAt(3),\r\n        code5: pastedText.charAt(4),\r\n        code6: pastedText.charAt(5),\r\n        code7: pastedText.charAt(6),\r\n        code8: pastedText.charAt(7),\r\n      });\r\n    }\r\n  }\r\n  handleInput(\r\n    currentInput: HTMLInputElement,\r\n    nextInput: HTMLInputElement | null\r\n  ) {\r\n    const inputValue = currentInput.value;\r\n\r\n    if (inputValue.length === 1 && nextInput) {\r\n      nextInput.focus();\r\n    }\r\n  }\r\n\r\n  handleBackspace(\r\n    event: KeyboardEvent,\r\n    prevInput: HTMLInputElement | null,\r\n    currentInput: HTMLInputElement\r\n  ) {\r\n    if (currentInput.value === \"\") {\r\n      event.preventDefault();\r\n      if (prevInput) {\r\n        prevInput.focus();\r\n      }\r\n    }\r\n  }\r\n\r\n  //Balida el campo que cumpla con las restricciones\r\n  requerido(id: string): boolean {\r\n    if (this.errorInput) {\r\n      const control = this.codeAuthForm.get(id);\r\n      const hasValue =\r\n        control && control.value !== null && control.value !== \"\";\r\n      if (hasValue) {\r\n        const hasRequiredError = control?.hasError(\"required\");\r\n        const hasPatternError = control?.value.length !== 8;\r\n\r\n        return !hasRequiredError && !hasPatternError;\r\n      }\r\n    }\r\n    return true;\r\n}\r\n}\r\n","<!DOCTYPE html>\r\n<html>\r\n  <head> </head>\r\n  <body style=\"background-color: white\" class=\"text\">\r\n    <div class=\"contenedor\">\r\n      <button\r\n        class=\"elemento\"\r\n        mat-mini-fab\r\n        color=\"secondary\"\r\n        (click)=\"closeDialog()\"\r\n      >\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n    <h3 class=\"text-center text\">Código de acceso</h3>\r\n    <form [formGroup]=\"codeAuthForm\">\r\n      <div class=\"row align-items-center contenInputCode\">\r\n        <div class=\"col\">\r\n          <input\r\n            [ngClass]=\"requerido('code1')? 'inputSucetfull': 'inputError'\"\r\n            type=\"text\"\r\n            formControlName=\"code1\"\r\n            maxlength=\"8\"\r\n          />\r\n        </div>\r\n\r\n      </div>\r\n    </form>\r\n\r\n    <p class=\"menssageError\">{{ textErrorCode }}</p>\r\n    <h6 class=\"text-Justified mt-3\">\r\n      Ingresa el código enviado a tu correo electrónico para acceder a tus redes\r\n      sociales\r\n    </h6>\r\n  </body>\r\n</html>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { AlertsService } from \"src/app/service/alerts.service\";\r\nimport { LoginService } from \"src/app/service/login.service\";\r\nimport { PublicacioneServices } from \"src/app/service/publicaciones.service\";\r\n\r\n@Component({\r\n  selector: \"app-create-post\",\r\n  templateUrl: \"./create-post.component.html\",\r\n  styleUrls: [\"./create-post.component.scss\"],\r\n})\r\nexport class CreatePostComponent implements OnInit {\r\n  postForm: FormGroup;\r\n  idUser: number;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private publicacioneServices: PublicacioneServices,\r\n    private loginService: LoginService,\r\n    private alertsService: AlertsService,\r\n    public dialogRef: MatDialogRef<CreatePostComponent>\r\n  ) {\r\n    this.postForm = this.fb.group({\r\n      description: [\"\", [Validators.required, Validators.maxLength(255)]],\r\n      multipartFile: [\"\"],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.idUser = this.loginService.decodeToken();\r\n  }\r\n\r\n  onSubmit() {\r\n    console.log(this.postForm.get('description').valid)\r\n    if(!this.postForm.get('description').valid){\r\n      this.alertsService.errorMessage(\"\", \"La descripción es requerida\")\r\n    }\r\n    if (this.postForm.valid) {\r\n      //Datos del formulario\r\n      const postFile = this.postForm.value;\r\n      console.log(postFile);\r\n\r\n      //Se crea un objeto de tipo File para manejar la imagen\r\n      let imagenFile: File = new File([], \"\");\r\n\r\n      //Se valida que la imagen se haya subido al input en caso de que no se pone como null\r\n      if (postFile.multipartFile != \"\") {\r\n        imagenFile = postFile.multipartFile[0].file;\r\n      } else {\r\n        imagenFile = null;\r\n      }\r\n\r\n      // Crear instancia de FormData y agregar propiedades del publicación a enviar\r\n      const formData = new FormData();\r\n      formData.append(\"description\", postFile.description);\r\n      //SE valida si la imagen existe\r\n      if (imagenFile != null) {\r\n        formData.append(\"multipartFile\", imagenFile);\r\n      }\r\n      formData.append(\"user\", this.idUser.toString());\r\n      //Se envía 0 indicando que es una publicación de bookface\r\n      this.publicacioneServices.createPost(formData, 0).subscribe({\r\n        next: (data) => {\r\n          this.alertsService.succesMessage(\"Publicación\", data.message);\r\n          this.dialogRef.close();\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"card\">\r\n    <div class=\"header\">\r\n        <h2>Crear publicación</h2>\r\n    </div>\r\n    <div class=\"body\">\r\n        <form class=\"m-4\" [formGroup]=\"postForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>Descripción</mat-label>\r\n                        <textarea matInput placeholder=\"¿Que estas pensando?\" formControlName=\"description\" maxlength=\"255\"></textarea>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"input-file-container\">\r\n                  <p class=\"mt-1\"><span class=\"uppercase fw-500\">Agregar imagen</span></p>\r\n                  <input-file formControlName=\"multipartFile\" fileLimit=\"1\" fileAccept=\"image/*\"></input-file>  \r\n                </div>\r\n              </div>\r\n              \r\n            <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                    <button class=\"btn-space\" mat-raised-button color=\"primary\">Aceptar</button>\r\n                    <button type=\"button\" mat-button (click)=\"close()\">Cancelar</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { AlertsService } from \"src/app/service/alerts.service\";\r\nimport { LoginService } from \"src/app/service/login.service\";\r\nimport { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { PublicacioneServices } from \"src/app/service/publicaciones.service\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\n\r\n@Component({\r\n  selector: \"app-edit-my-post\",\r\n  templateUrl: \"./edit-my-post.component.html\",\r\n  styleUrls: [\"./edit-my-post.component.scss\"],\r\n})\r\nexport class EditMyPostComponent implements OnInit {\r\n  postForm: FormGroup;\r\n  idUser: number;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: number,\r\n    private fb: FormBuilder,\r\n    private publicacioneServices: PublicacioneServices,\r\n    private loginService: LoginService,\r\n    private alertsService: AlertsService,\r\n    public dialogRef: MatDialogRef<EditMyPostComponent>\r\n  ) {\r\n    this.postForm = this.fb.group({\r\n      description: [\"\", [Validators.required]],\r\n      idPost:[\"\"]\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.agregarDta()\r\n  }\r\n  //Nos permite obtener los datos del post\r\n  agregarDta(){\r\n    this.publicacioneServices.findByIdPost(this.data).subscribe({next:data=>{\r\n      const dataAnte={\r\n        description:data.data.description,\r\n        idPost: data.data.idPost\r\n      }\r\n      this.postForm.patchValue(dataAnte);\r\n    }})\r\n  }\r\n  onSubmit() {\r\n    const dataNew=this.postForm.value\r\n    //Se envía 0 indicando que es una publicación de bookface\r\n    this.publicacioneServices.updatePost(0,dataNew).subscribe({\r\n      next: (data) => {\r\n        console.log(data)\r\n        this.alertsService.succesMessage(\"Publicación\", data.message);\r\n        this.dialogRef.close();\r\n      },\r\n    });\r\n  }\r\n  //cerrar este dialog\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"card\">\r\n    <div class=\"header\">\r\n        <h2>Editar publicación</h2>\r\n    </div>\r\n    <div class=\"body\">\r\n        <form class=\"m-4\" [formGroup]=\"postForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>Descripción</mat-label>\r\n                        <textarea matInput placeholder=\"¿Que estas pensando?\" formControlName=\"description\" maxlength=\"255\"></textarea>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                    <button class=\"btn-space\" mat-raised-button color=\"primary\">Guardar</button>\r\n                    <button type=\"button\" mat-button (click)=\"close()\">Cancelar</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { PublicationsComponent } from \"./publications/publications.component\";\r\nimport { MyPublicationsComponent } from \"./my-publications/my-publications.component\";\r\n\r\nconst routes: Routes = [\r\n  { path: \"\", redirectTo: \"public\", pathMatch: \"full\" },\r\n  { path: \"public\", component: PublicationsComponent },\r\n  { path: \"myposts\", component: MyPublicationsComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class FacebookRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-facebook',\r\n  templateUrl: './facebook.component.html',\r\n  styleUrls: ['./facebook.component.scss']\r\n})\r\nexport class FacebookComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-header></app-header>\r\n<router-outlet ></router-outlet>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FacebookRoutingModule } from './facebook-routing.module';\r\nimport { FacebookComponent } from './facebook.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport { PublicationsComponent } from './publications/publications.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport { CreatePostComponent } from './create-post/create-post.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatPseudoCheckboxModule } from '@angular/material/core';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport {InputFileModule} from 'ngx-input-file'\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\n\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatNativeDateModule} from '@angular/material/core';\r\nimport { MatMenuModule } from \"@angular/material/menu\";\r\n\r\nimport { CommentsComponent } from './publications/comments/comments.component';\r\nimport { MyPublicationsComponent } from './my-publications/my-publications.component';\r\nimport { EditMyPostComponent } from './edit-my-post/edit-my-post.component';\r\n\r\n\r\n\r\n \r\n@NgModule({\r\n  declarations: [\r\n    FacebookComponent,\r\n    HeaderComponent,\r\n    PublicationsComponent,\r\n    CreatePostComponent,\r\n    CommentsComponent,\r\n    MyPublicationsComponent,\r\n    EditMyPostComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FacebookRoutingModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    MatBadgeModule,\r\n    MatCardModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatButtonModule,\r\n    MatPaginatorModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatNativeDateModule,\r\n    MatMenuModule,\r\n    MatDialogModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatPseudoCheckboxModule,\r\n    MatDatepickerModule,\r\n    InputFileModule,\r\n    MatProgressSpinnerModule\r\n  ],\r\n  exports:[FacebookComponent]\r\n})\r\nexport class FacebookModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { AlertsService } from 'src/app/service/alerts.service';\r\nimport { ViewChild } from \"@angular/core\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { Post } from \"src/app/models/post.model\";\r\nimport { PublicacioneServices } from \"src/app/service/publicaciones.service\";\r\nimport { trigger, transition, style, animate } from \"@angular/animations\";\r\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\r\n\r\nimport { Utils } from \"src/app/shared/utils/utils\";\r\nimport { CreatePostComponent } from \"../create-post/create-post.component\";\r\nimport { LoginService } from \"src/app/service/login.service\";\r\nimport { User } from \"src/app/models/user\";\r\nimport { CommentsComponent } from \"../publications/comments/comments.component\";\r\nimport { EditMyPostComponent } from '../edit-my-post/edit-my-post.component';\r\n\r\n@Component({\r\n  selector: \"app-my-publications\",\r\n  templateUrl: \"./my-publications.component.html\",\r\n  styleUrls: [\"./my-publications.component.scss\"],\r\n})\r\nexport class MyPublicationsComponent implements OnInit {\r\n  seeComments = true;\r\n  subComments = true;\r\n\r\n  pageSize: number = 5; // Tamaño de página\r\n  currentPage: number = 0; // Página actual\r\n  lengthPost: number = 0;\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  data: User;\r\n\r\n  postLiked = false;\r\n\r\n  //Srcoll\r\n  loading = false;\r\n  cargando = false;\r\n\r\n  constructor(\r\n    private postService: PublicacioneServices,\r\n    public dialog: MatDialog,\r\n    private authService: LoginService,\r\n    private alertsService: AlertsService\r\n  ) {}\r\n\r\n  posts: Post[] = [];\r\n\r\n  ngOnInit(): void {\r\n    // this.getAllPost();\r\n    // this.getAllPostPage(this.currentPage, this.pageSize);\r\n    this.getAllPostPage();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.uId();\r\n  }\r\n\r\n  getAllPost() {\r\n    this.postService.findAllPost().subscribe({\r\n      next: (data) => {\r\n        this.posts = data.list;\r\n        // this.updatePagedPosts();\r\n        // console.log(data);\r\n      },\r\n    });\r\n  }\r\n\r\n  getAllPostPage() {\r\n    // console.log(page, size)\r\n    this.postService.findByUserPost(1).subscribe({\r\n      next: (data) => {\r\n        this.posts = data.list; // Concatenar los nuevos posts al final del array existente\r\n        this.cargando = false;\r\n        //console.log(data);\r\n      },\r\n    });\r\n  }\r\n\r\n  deletePost(id: any) {\r\n    this.postService.deletePost(id).subscribe({\r\n      next:(data)=>{\r\n        this.alertsService.succesMessage(\"\", data.message);\r\n        this.getAllPostPage()\r\n      },\r\n      error:(data) =>{\r\n        this.alertsService.errorMessage('',data.message);        \r\n      }     \r\n    })\r\n    \r\n  }\r\n\r\n  editPost(id: any){\r\n    const modalRef = this.dialog.open(EditMyPostComponent, {\r\n      data:id,\r\n      maxWidth: \"100vw\",\r\n      maxHeight: \"100vh\",\r\n      panelClass: \"full-screen-dialog-create-post\",\r\n    });\r\n    modalRef.afterClosed().subscribe((result) => {\r\n      //Se cerro el dialog\r\n      this.getAllPostPage();\r\n    });\r\n  }\r\n  scrollPosition = 0;\r\n  loadPostsTimeout: any;\r\n\r\n  onScroll() {\r\n    const scrollContainer = document.querySelector(\".scrollClass\");\r\n    const windowHeight =\r\n      \"innerHeight\" in window\r\n        ? window.innerHeight\r\n        : document.documentElement.offsetHeight;\r\n    const containerHeight = scrollContainer?.clientHeight || 0;\r\n    const containerScrollHeight = scrollContainer?.scrollHeight || 0;\r\n    const containerScrollTop = scrollContainer?.scrollTop || 0;\r\n    const windowBottom = windowHeight + containerScrollTop;\r\n\r\n    if (\r\n      windowBottom >= containerScrollHeight - 1 &&\r\n      containerScrollTop > this.scrollPosition\r\n    ) {\r\n      //Agregando animación de scroll\r\n\r\n      this.scrollPosition = containerScrollTop;\r\n      clearTimeout(this.loadPostsTimeout);\r\n      this.loadPostsTimeout = setTimeout(() => {}, 400); // Esperar 200 ms antes de cargar más posts\r\n    }\r\n  }\r\n\r\n  activateComments() {\r\n    this.seeComments = !this.seeComments;\r\n  }\r\n  activateSubComments() {\r\n    this.subComments = !this.subComments;\r\n  }\r\n\r\n  toggleLike(row) {\r\n    // console.log(row)\r\n    if (row.liked) {\r\n      // console.log(\"Restando likes\");\r\n      this.postLiked = false;\r\n      row.liked = false;\r\n      row.numLike--;\r\n      this.subtractLike(row.idPost);\r\n    } else {\r\n      this.postLiked = true;\r\n      row.numLike++;\r\n      row.liked = true;\r\n      // console.log(\"Sumando like\");\r\n      this.sumLike(row.idPost);\r\n    }\r\n  }\r\n\r\n  subtractLike(id) {\r\n    this.postService.subtractLike(id).subscribe({\r\n      next: (data) => {\r\n        // console.log(data);\r\n      },\r\n    });\r\n  }\r\n\r\n  sumLike(id) {\r\n    this.postService.sumLike(id).subscribe({\r\n      next: (data) => {\r\n        // console.log(data);\r\n      },\r\n    });\r\n  }\r\n\r\n  onPageChange(event: any) {\r\n    this.currentPage = event.pageIndex;\r\n    // console.log(event)\r\n  }\r\n\r\n  createPost() {\r\n    const modalRef = this.dialog.open(CreatePostComponent, {\r\n      // width: '1000px',nent\r\n      maxWidth: \"100vw\",\r\n      maxHeight: \"100vh\",\r\n      panelClass: \"full-screen-dialog-create-post\",\r\n    });\r\n    modalRef.afterClosed().subscribe((result) => {\r\n      //Se cerro el dialog\r\n      this.getAllPostPage();\r\n    });\r\n  }\r\n\r\n  validaUrl(url: string): boolean {\r\n    return Utils.isValidUrl(url);\r\n  }\r\n\r\n  goComments(post: Post) {\r\n    const dialogConfig: MatDialogConfig<any> = {\r\n      data: post,\r\n      maxWidth: \"100vw\",\r\n      maxHeight: \"100vh\",\r\n      panelClass: \"full-screen-dialog-coments\",\r\n    };\r\n    dialogConfig.disableClose = true;\r\n\r\n    const modalRef = this.dialog.open(CommentsComponent, dialogConfig);\r\n  }\r\n\r\n  //obtener los datos del usuario desde el token\r\n  uId() {\r\n    const uid = this.authService.decodeToken();\r\n    this.authService.findById(uid).subscribe((data: any) => {\r\n      this.data = data.data;\r\n    });\r\n  }\r\n}\r\n","  <div class=\"content-block\" >\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12 col-md-12 col-sm-9 col-xs-9\" >\r\n        <div class=\"card\">\r\n          <div class=\"body\">\r\n            <div class=\"wrapper\">\r\n              <main class=\"main\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-3\">\r\n                    <mat-card class=\"example-card actions\">\r\n                      <mat-card-header>\r\n                        <mat-card-title>{{data?.name}}</mat-card-title>\r\n                      </mat-card-header>\r\n                      <p class=\"ms-4\" style=\"color: blue;\">Mis publicaciones</p>\r\n                      <mat-card-actions>\r\n                        <button mat-button (click)=\"createPost()\">Crear publicación</button>\r\n                        <button mat-button routerLink=\"/home/bookface\">Ver publicaciones</button>\r\n                      </mat-card-actions>\r\n                    </mat-card>\r\n                  </div>\r\n  \r\n                  <div class=\"col-md-6 scrollClass\" (scroll)=\"onScroll()\">\r\n                    <mat-card class=\"example-card\" *ngFor=\"let post of posts\" [@pageTransition]>\r\n                      \r\n                      <div class=\"derecha\">\r\n                        <button [matMenuTriggerFor]=\"menu\"  mat-icon-button color=\"link\">\r\n                          <mat-icon>more_vert</mat-icon>\r\n                        </button>\r\n                          <mat-menu #menu=\"matMenu\" class=\"\">\r\n                            <button mat-menu-item (click)=\"editPost(post.idPost)\">\r\n                              <mat-icon>edit</mat-icon>\r\n                              <span>Editar</span>\r\n                            </button>\r\n                            \r\n                            <button mat-menu-item (click)=\"deletePost(post.idPost)\">\r\n                              <mat-icon>delete</mat-icon>\r\n                              <span>Eliminar</span>\r\n                            </button>\r\n                          </mat-menu>\r\n                      </div>\r\n\r\n                      <mat-card-header>\r\n                        <div mat-card-avatar class=\"example-header-image\"\r\n                          style=\"background-image:url('{{post.user.avatar}}')\"></div>\r\n                        <mat-card-title>{{post.user.name}} {{post.user.fatherLastName}} {{post.user.motherLastName}}\r\n                        </mat-card-title>\r\n                        <mat-card-subtitle>{{post.dateRegistration | date: 'dd-MMMM-yyyy'}}</mat-card-subtitle>\r\n                      </mat-card-header>\r\n  \r\n                      <mat-card-content>\r\n                        <p class=\"postText\">\r\n                          {{post.description}}\r\n                        </p>\r\n                      </mat-card-content>\r\n  \r\n                      <img mat-card-image m-1 class=\"imagenPost\" *ngIf=\"post.multimedia && validaUrl(post.multimedia)\"\r\n                        src=\"{{post.multimedia}}\" alt=\"No se puede visualizar la imagen\">\r\n  \r\n                      <mat-card-actions>\r\n                        <button mat-button color=\"primary\" [ngClass]=\"{'liked': post.liked}\" disabled>\r\n                          <mat-icon matBadge=\"{{post.numLike}}\">thumb_up_off_alt</mat-icon>\r\n                          LIKE\r\n                        </button>\r\n  \r\n                        <button mat-button color=\"primary\" (click)=\"goComments(post)\"  >\r\n                          <mat-icon>chat_bubble_outline</mat-icon>\r\n                          Comentarios\r\n                        </button>\r\n                      </mat-card-actions>\r\n                    </mat-card>\r\n                    <div class=\"col spinner\">\r\n                      <mat-spinner *ngIf=\"cargando\"></mat-spinner>\r\n                    </div>\r\n                  </div>\r\n  \r\n                  <div class=\"col-md-3\">\r\n  \r\n                  </div>\r\n  \r\n                </div>\r\n              </main>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n","import { Component, ElementRef, HostListener, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Post } from 'src/app/models/post.model';\r\nimport { CommentsService } from '../../../../service/comments.service';\r\nimport { AlertsService } from '../../../../service/alerts.service';\r\nimport { Comment } from 'src/app/models/comment';\r\nimport { CommentDTO } from 'src/app/models/commentDTO';\r\nimport { LoginService } from '../../../../service/login.service';\r\nimport { User } from 'src/app/models/user';\r\nimport { Response } from 'src/app/models/response.model';\r\nimport { Respuesta } from 'src/app/models/respuesta';\r\nimport { FormBuilder } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-comments',\r\n  templateUrl: './comments.component.html',\r\n  styleUrls: ['./comments.component.scss']\r\n})\r\nexport class CommentsComponent implements OnInit {\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: Post,\r\n  public dialogRef: MatDialogRef<CommentsComponent>,\r\n  private commentsService:CommentsService,\r\n  private alertsService:AlertsService,\r\n  private loginService:LoginService,\r\n  private formBuilder:FormBuilder,\r\n  private elementRef: ElementRef ) {\r\n    this.post = data\r\n  }\r\n\r\n  public post:Post;\r\n  public comments:Comment[] = [];\r\n  public user:User;\r\n  public imageUpload!: File;\r\n  public mostrarImagen!:string;\r\n  public mostrarImagen2!:string;\r\n  public imageTemp!: string | ArrayBuffer | null;\r\n  commentLikedMap: { [commentId: string]: boolean } = {};\r\n  commentLiked = false;\r\n  postLiked = false;\r\n  editableComment: any = null;\r\n\r\n\r\n  // Edit Comment\r\n  editingMode = false;\r\n  editedDescription = '';\r\n  imageEdit:any = null;\r\n  commentEdit:Comment;\r\n\r\n  formComment = this.formBuilder.group({\r\n    descripcion:[''],\r\n    img:[]\r\n  })\r\n\r\n  // @HostListener('document:click', ['$event'])\r\n  // onClickOutside(event: Event) {\r\n  //   // Check if the click event occurred outside the component's element\r\n  //   if (!this.elementRef.nativeElement.contains(event.target)) {\r\n  //     // Cancel editing if the editing mode is active\r\n  //     if (this.editingMode) {\r\n  //       this.cancelEdit();\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  ngOnInit(): void {\r\n    this.findAllComments();\r\n    this.getUser();\r\n  }\r\n\r\n  toggleLikeComment(comment:Comment) {\r\n    const commentId = comment.idComment;\r\n    if (this.commentLikedMap[commentId]) {\r\n      console.log(\"Restando likes\");\r\n      // this.commentLiked=false;\r\n      this.subtractLike(comment);\r\n    } else {\r\n      this.commentLikedMap[commentId] = true;\r\n      // this.commentLiked=true;\r\n      console.log(\"Sumando like\");\r\n      this.likeComment(comment);\r\n    }\r\n  }\r\n\r\n\r\n  toggleLikePost(){\r\n    if (this.postLiked) {\r\n      console.log(\"Restando likes\");\r\n      this.postLiked=false;\r\n      // this.subtractLike(comment);\r\n    } else {\r\n      this.postLiked=true;\r\n      console.log(\"Sumando like\");\r\n      // this.likeComment(comment);\r\n    }\r\n  }\r\n\r\n  toggleEditMode(commentM:Comment) {\r\n    \r\n    this.editingMode = true;    \r\n    this.commentEdit = this.comments.find(comment => comment.idComment === commentM.idComment);\r\n    this.editedDescription = commentM.descripcion; // Initialize the edited description\r\n  }\r\n\r\n  cancelEdit() {\r\n    // Cancel editing and revert back to read-only mode\r\n    this.editingMode = false;\r\n    this.editedDescription = '';\r\n    this.findAllComments();\r\n\r\n  }\r\n\r\n  commentPost(){\r\n  }\r\n\r\n  findAllComments(){    \r\n    this.commentsService.findByPostComment(this.post.idPost).subscribe({\r\n      next:(data)=>{\r\n        console.log(data)\r\n        this.comments = data.list;\r\n        console.log(this.comments);\r\n        console.log(this.user)\r\n      },\r\n      error:(data) =>{\r\n        this.alertsService.errorMessage('',data.message);        \r\n      }     \r\n    })\r\n\r\n  }\r\n\r\n  getUser(){\r\n    const id = this.loginService.decodeToken();\r\n    this.loginService.findById(id).subscribe({\r\n      next:(user:any)=>{\r\n        this.user = user.data; \r\n        console.log(this.user)       \r\n      },\r\n      error:(error)=>{\r\n        this.alertsService.errorMessage('Error','Hubo un error inesperado');\r\n      }\r\n    })\r\n  }\r\n\r\n  cambiarImagen(file: File) {    \r\n    this.imageUpload = file;\r\n    if (!file) {\r\n      return this.imageTemp = null;\r\n    } else {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onloadend = () => {\r\n        this.imageTemp = reader.result;\r\n      }\r\n      return this.imageTemp;\r\n    }\r\n\r\n    // console.log(event)\r\n    // this.fileUploadService.actualizarFoto()\r\n  }\r\n\r\n  removePlaceholderText() {\r\n    const placeholder = document.getElementById('placeholder');\r\n    if (placeholder) {\r\n      placeholder.style.display = 'none';\r\n    }\r\n  }\r\n\r\n  \r\n  \r\n\r\n  uploadImage(event:any){\r\n    const imagen = event.target.files[0];\r\n    this.formComment.controls.img.setValue(imagen);\r\n    console.log(event)\r\n    const reader = new FileReader();\r\n    // const control = this.formComment.controls.img;\r\n    reader.onload = (ima) =>{    \r\n      const base64img = reader.result + '';\r\n      console.log(base64img)\r\n      this.mostrarImagen = base64img;\r\n      // control.setValue(base64img);\r\n      // console.log(control.value)    \r\n    }\r\n    reader.readAsDataURL(imagen); \r\n    event.srcElement.value = null;\r\n  }\r\n\r\n  uploadImageEditComment(event:any,comment:Comment){\r\n    const imagen = event.target.files[0];\r\n    this.imageEdit = imagen;\r\n    console.log(event)\r\n    const reader = new FileReader();\r\n    // const control = this.formComment.controls.img;\r\n    reader.onload = (ima) =>{    \r\n      const base64img = reader.result + '';\r\n      console.log(base64img)\r\n      this.mostrarImagen2 = base64img;\r\n      // control.setValue(base64img);\r\n      // console.log(control.value)    \r\n    }\r\n    reader.readAsDataURL(imagen); \r\n    event.srcElement.value = null;\r\n  }\r\n\r\n  saveComment(){\r\n    const comment = new CommentDTO();\r\n    comment.multipartFile = this.formComment.controls.img.value;\r\n    comment.post = this.post.idPost;\r\n    comment.descripcion = this.formComment.controls.descripcion.value;\r\n    comment.user = this.user.id_user;\r\n    console.log(comment)\r\n\r\n    this.commentsService.createComment(comment).subscribe({\r\n      next:(data:Response<any>)=>{\r\n        this.alertsService.succesMessage('',data.message);\r\n        this.findAllComments();\r\n        this.limpiarComentario();\r\n      },\r\n      error:(data:any) =>{\r\n        // console.log(data)\r\n        this.alertsService.errorMessage('',data.error.message)\r\n      }\r\n    })\r\n  }\r\n\r\n  limpiarComentario(){\r\n    this.mostrarImagen = '';\r\n    this.formComment.controls.img.setValue('');\r\n    this.formComment.controls.descripcion.setValue('');\r\n  }\r\n\r\n  deleteImage(){\r\n    this.mostrarImagen = null;\r\n  }\r\n\r\n  updateComment(comment:Comment){\r\n    console.log(comment)\r\n    const newComment = new CommentDTO();\r\n    newComment.descripcion = this.editedDescription;  \r\n    newComment.idComment = comment.idComment;\r\n    console.log(this.imageEdit)\r\n    this.imageEdit !== null ? newComment.multipartFile = this.imageEdit : newComment.multimedia = comment.multimedia;\r\n    // newComment.multimedia = null\r\n    console.log(this.imageEdit)\r\n    newComment.numLike = comment.numLike\r\n    newComment.user = this.user.id_user;\r\n    newComment.post = comment.post.idPost;\r\n    console.log(newComment)\r\n    this.commentsService.updateComment(newComment).subscribe({\r\n      next:(data:any)=>{\r\n        this.alertsService.succesMessage('',data.message);\r\n        this.findAllComments();\r\n        this.editingMode = false;      \r\n        this.mostrarImagen2 = ''\r\n      },\r\n      error:(data:any) =>{\r\n        // console.log(data)\r\n        this.alertsService.errorMessage('',data.error.message)\r\n      }     \r\n    })\r\n\r\n  }\r\n\r\n  deleteComment(comment:Comment){\r\n    this.commentsService.deleteComment(comment.idComment).subscribe({\r\n      next:(data:any)=>{\r\n        this.alertsService.succesMessage('',data.message);\r\n        this.findAllComments();\r\n      },\r\n      error:(data:any) =>{\r\n        // console.log(data)\r\n        this.alertsService.errorMessage('',data.error.message)\r\n      }      \r\n    })    \r\n  }\r\n\r\n  likeComment(comment:Comment){\r\n    this.commentsService.sumLike(comment.idComment).subscribe({\r\n      next:(data:any) =>{\r\n        console.log(data);\r\n        this.findAllComments();\r\n      },\r\n      error:(data:any)=>{\r\n        console.log(data)\r\n      }      \r\n    })\r\n  }\r\n\r\n  subtractLike(comment:Comment){\r\n    this.commentsService.subtractLike(comment.idComment).subscribe({\r\n      next:(data:any) =>{\r\n        console.log(data);\r\n        this.findAllComments();\r\n      },\r\n      error:(data:any)=>{\r\n        console.log(data)\r\n      }      \r\n    })\r\n  }\r\n\r\n  removeImage(comment) {\r\n    comment.multimedia = null;\r\n    \r\n  }\r\n  \r\n\r\n\r\n  closeCommentDialog(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<div style=\"width: 94%;\">\r\n  <div mat-dialog-title>\r\n    <div class=\"row text\">\r\n      <div class=\"col justify-content-center d-flex align-items-center\">\r\n        Publicación de {{ post.user.name }}\r\n        {{ post.user?.fatherLastName }}\r\n        {{ post.user?.motherLastName }}\r\n      </div>\r\n      <div class=\"col-1 text-end\">\r\n        <button mat-mini-fab color=\"link\" (click)=\"closeCommentDialog()\">\r\n          <mat-icon>close</mat-icon>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <mat-dialog-content class=\"mat-typography text\">\r\n    <div class=\"col-md-12 col-lg-12 col-xs-12\">\r\n      <h2 *ngIf=\"comments.length === 0\">\r\n        No hay comentario, se el primero en comentar\r\n      </h2>\r\n      <mat-card class=\"example-card\" *ngFor=\"let comment of comments; \">\r\n        <div class=\"derecha\" *ngIf=\"comment.user.idUser == user.id_user\">\r\n          <button\r\n            mat-icon-button\r\n            [matMenuTriggerFor]=\"menu\"\r\n            aria-label=\"Example icon-button with a menu\"\r\n          >\r\n            <mat-icon>more_vert</mat-icon>\r\n          </button>\r\n          <div>\r\n          <mat-menu #menu=\"matMenu\" >\r\n            <button *ngIf=\"i === i\" mat-menu-item (click)=\"toggleEditMode(comment)\">\r\n              <mat-icon class=\"col-blue\">cached</mat-icon>\r\n              <span>Editar</span>\r\n            </button>\r\n            <button mat-menu-item (click)=\"deleteComment(comment)\">\r\n              <mat-icon class=\"col-red\">delete</mat-icon>\r\n              <span>Eliminar</span>\r\n            </button>\r\n          </mat-menu>\r\n          </div>\r\n        </div>\r\n        <mat-card-header>\r\n          <div\r\n            mat-card-avatar\r\n            class=\"example-header-image\"\r\n            [style.background-image]=\"'url(' + comment.user.avatar + ')'\"\r\n          ></div>\r\n          <div >\r\n            <div class=\"text1 text-truncate\">\r\n             {{ comment.user.name }} {{ comment.user.fatherLastName }}\r\n            {{ comment.user.motherLastName }}\r\n            </div>\r\n            <div>\r\n              {{comment.user.dateRegistration}}\r\n            </div>\r\n          </div>\r\n          \r\n        </mat-card-header>\r\n        <mat-card-content >\r\n          <ng-container *ngIf=\"comment !== commentEdit; else editMode\">\r\n            {{ comment.descripcion }}\r\n          </ng-container>\r\n          <ng-template #editMode>\r\n            <mat-form-field >\r\n              <input matInput [(ngModel)]=\"editedDescription\" />\r\n            </mat-form-field>\r\n            <div *ngIf=\"comment.multimedia\">\r\n              <div>\r\n                <img\r\n                  mat-card-xl-image\r\n                  src=\"{{ comment.multimedia }}\"\r\n                  alt=\"Imagen del comentario\"\r\n                />\r\n              </div>\r\n  \r\n              <button\r\n                class=\"derecha\"\r\n                mat-icon-button\r\n                color=\"warn\"\r\n                (click)=\"removeImage(comment)\"\r\n              >\r\n                <mat-icon>delete</mat-icon>\r\n              </button>\r\n            </div>\r\n            <div class=\"col\">\r\n              <figure>\r\n                <img [src]=\"mostrarImagen2\" class=\"proyection-image\" />\r\n              </figure>\r\n            </div>\r\n            <div *ngIf=\"!comment?.multimedia\">\r\n              <label for=\"upload\" class=\"custom-file-upload\">\r\n                <mat-icon for=\"upload\" class=\"icon\">add_a_photo</mat-icon>\r\n              </label>\r\n              <input\r\n                id=\"upload\"\r\n                name=\"upload\"\r\n                type=\"file\"\r\n                (change)=\"uploadImageEditComment($event, comment)\"\r\n                accept=\"image/png,image/jpeg,image/jpg\"\r\n              />\r\n            </div>\r\n            <button class=\"derecha\" mat-button (click)=\"cancelEdit()\">\r\n              Cancelar\r\n            </button>\r\n            <button\r\n              class=\"derecha\"\r\n              [disabled]=\"editedDescription.length === 0\"\r\n              mat-button\r\n              color=\"primary\"\r\n              (click)=\"updateComment(comment)\"\r\n            >\r\n              <mat-icon>send</mat-icon>\r\n            </button>\r\n          </ng-template>\r\n        </mat-card-content>\r\n        <div class=\"text-center\">\r\n          <img\r\n            style=\"border-radius: 10pt\"\r\n            *ngIf=\"comment.multimedia && !editingMode\"\r\n            mat-card-xl-image\r\n            src=\"{{ comment?.multimedia }}\"\r\n          />\r\n        </div>\r\n  \r\n        <mat-card-actions>\r\n          <button\r\n            mat-button\r\n            [ngClass]=\"{ liked: commentLikedMap[comment.id] }\"\r\n            (click)=\"toggleLikeComment(comment)\"\r\n          >\r\n            <mat-icon class=\"col-blue\">thumb_up_alt</mat-icon>\r\n            Like {{ comment.numLike }}\r\n          </button>\r\n        </mat-card-actions>\r\n        <mat-divider></mat-divider>\r\n      </mat-card>\r\n    </div>\r\n  </mat-dialog-content>\r\n  <mat-dialog-actions >\r\n    <form class=\"example-form\" [formGroup]=\"formComment\">\r\n      <div class=\"row d-flex justify-content-center align-items-center\">\r\n        <div\r\n          mat-card-avatar\r\n          class=\"example-header-image col-1\"\r\n          [style.background-image]=\"'url(' + user.avatar + ')'\"\r\n        ></div>\r\n  \r\n        <div class=\"col\">\r\n          <mat-form-field appearance=\"outline\" class=\"inpCom\">\r\n            <textarea\r\n              matInput\r\n              type=\"text-area\"\r\n              formControlName=\"descripcion\"\r\n              placeholder=\"Escribe tu comentario\"\r\n              rows=\"3\"\r\n            ></textarea>\r\n            <div class=\"container\">\r\n              <div class=\"row\">\r\n                <div class=\"col\">\r\n                  <figure *ngIf=\"mostrarImagen\">\r\n                    <img [src]=\"mostrarImagen\" class=\"proyection-image\" />\r\n                  </figure>\r\n                </div>\r\n                <div class=\"col\"></div>\r\n                <div *ngIf=\"mostrarImagen\" class=\"col text-end\">\r\n                  <button mat-mini-fab color=\"link\" (click)=\"deleteImage()\">\r\n                    <mat-icon>close</mat-icon>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"justify-content-end align-items-center d-flex\">\r\n              <span>\r\n                <button\r\n                  [disabled]=\"\r\n                    !formComment.controls.img.value &&\r\n                    !formComment.controls.descripcion.value\r\n                  \"\r\n                  mat-button\r\n                  (click)=\"saveComment()\"\r\n                >\r\n                  <mat-icon>send</mat-icon>\r\n                </button>\r\n              </span>\r\n  \r\n              <label for=\"upload\" class=\"custom-file-upload\">\r\n                <mat-icon for=\"upload\" class=\"icon\">add_a_photo</mat-icon>\r\n              </label>\r\n              <input\r\n                id=\"upload\"\r\n                name=\"upload\"\r\n                type=\"file\"\r\n                (change)=\"uploadImage($event)\"\r\n                accept=\"image/png,image/jpeg,image/jpg\"\r\n              />\r\n            </div>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </mat-dialog-actions>\r\n  \r\n</div>\r\n","import { ViewChild } from '@angular/core';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { Post } from 'src/app/models/post.model';\r\nimport { PublicacioneServices } from 'src/app/service/publicaciones.service';\r\nimport { trigger, transition, style, animate } from '@angular/animations';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { CreatePostComponent } from '../create-post/create-post.component';\r\nimport { Utils } from 'src/app/shared/utils/utils';\r\nimport { CommentsComponent } from './comments/comments.component';\r\nimport { LoginService } from 'src/app/service/login.service';\r\nimport { User } from 'src/app/models/user';\r\nimport { AlertsService } from 'src/app/service/alerts.service';\r\nimport { EditMyPostComponent } from '../edit-my-post/edit-my-post.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-publications',\r\n  templateUrl: './publications.component.html',\r\n  styleUrls: ['./publications.component.scss'],\r\n  animations: [\r\n    trigger('pageTransition', [\r\n      transition(':enter', [\r\n        style({ opacity: 0 }),\r\n        animate('300ms', style({ opacity: 1 }))\r\n      ]),\r\n      transition(':leave', [\r\n        animate('300ms', style({ opacity: 0 }))\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class PublicationsComponent implements OnInit {\r\n  seeComments = true\r\n  subComments = true\r\n\r\n  pageSize: number = 5; // Tamaño de página\r\n  currentPage: number = 0; // Página actual\r\n  lengthPost:number=0;\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  data:User;\r\n\r\n\r\n  postLiked = false;\r\n\r\n  //Srcoll\r\n  loading = false;\r\n  cargando= false;\r\n\r\n\r\n  constructor(private postService: PublicacioneServices,\r\n    public dialog: MatDialog,\r\n    private authService: LoginService,\r\n    private alertsService: AlertsService\r\n  ) { }\r\n\r\n  posts: Post[] =[];\r\n\r\n  ngOnInit(): void {\r\n    // this.getAllPost();\r\n    // this.getAllPostPage(this.currentPage, this.pageSize);\r\n    this.loadMorePosts();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.uId();\r\n  }\r\n\r\n  getAllPost(){\r\n    this.postService.findAllPost().subscribe({next: data=>{\r\n      this.posts= data.list;\r\n      // this.updatePagedPosts();\r\n      console.log(data);\r\n    }})\r\n  }\r\n\r\n  getAllPostPage(page:number, size:number){\r\n    console.log(page, size)\r\n    this.postService.findAllPostPage(page, size).subscribe({next: data=>{\r\n      this.lengthPost=data.count;\r\n      this.posts= this.posts.concat(data.list); // Concatenar los nuevos posts al final del array existente\r\n      this.cargando=false;\r\n      console.log(data);\r\n\r\n    }})\r\n  }\r\n\r\n  loadMorePosts() {\r\n    if (!this.loading) {\r\n      this.loading = true;\r\n      this.getAllPostPage(this.currentPage, 5); // 5 posts por carga\r\n      this.currentPage++; // Avanzamos al siguiente grupo de 5 posts\r\n      this.loading = false;\r\n    }\r\n  }\r\n  \r\n  scrollPosition = 0;\r\n  loadPostsTimeout: any;\r\n  \r\n  onScroll() {\r\n    const scrollContainer = document.querySelector('.scrollClass');\r\n    const windowHeight = \"innerHeight\" in window ? window.innerHeight : document.documentElement.offsetHeight;\r\n    const containerHeight = scrollContainer?.clientHeight || 0;\r\n    const containerScrollHeight = scrollContainer?.scrollHeight || 0;\r\n    const containerScrollTop = scrollContainer?.scrollTop || 0;\r\n    const windowBottom = windowHeight + containerScrollTop;\r\n  \r\n    if (windowBottom >= containerScrollHeight - 1 && containerScrollTop > this.scrollPosition) {\r\n      //Agregando animacion de scroll\r\n      this.cargando=true;\r\n\r\n      this.scrollPosition = containerScrollTop;\r\n      clearTimeout(this.loadPostsTimeout);\r\n      this.loadPostsTimeout = setTimeout(() => {\r\n        this.loadMorePosts();\r\n      }, 400); // Esperar 200 ms antes de cargar más posts\r\n    }\r\n  }\r\n  \r\n  \r\n  \r\n  \r\n  \r\n\r\n  activateComments(){\r\n    this.seeComments=!this.seeComments\r\n  }\r\n  activateSubComments(){\r\n    this.subComments=!this.subComments\r\n  }\r\n\r\n  toggleLike(row) {\r\n    console.log(row)\r\n    if (row.liked) {\r\n      console.log(\"Restando likes\");\r\n      this.postLiked=false;\r\n      row.liked=false;\r\n      row.numLike--;\r\n      this.subtractLike(row.idPost);\r\n    } else {\r\n      this.postLiked=true;\r\n      row.numLike++;\r\n      row.liked=true;\r\n      console.log(\"Sumando like\");\r\n      this.sumLike(row.idPost);\r\n    }\r\n  }\r\n\r\n  subtractLike(id){\r\n    this.postService.subtractLike(id).subscribe({next:data=>{\r\n      console.log(data);\r\n    }})\r\n  }\r\n\r\n  sumLike(id){\r\n    this.postService.sumLike(id).subscribe({next:data=>{\r\n      console.log(data);\r\n    }})\r\n  }\r\n\r\n  onPageChange(event: any) {\r\n    this.currentPage = event.pageIndex;\r\n    console.log(event)\r\n    this.getAllPostPage(event.pageIndex, event.pageSize);\r\n  }\r\n\r\n\r\n\r\n  createPost() {\r\n    const modalRef = this.dialog.open(CreatePostComponent, {\r\n      // width: '1000px',\r\n      maxWidth: '100vw',\r\n      maxHeight: '100vh',\r\n       panelClass: 'full-screen-dialog-create-post',\r\n    });\r\n    modalRef.afterClosed().subscribe(result=>{\r\n      this.posts=[]\r\n        //Se cerro el dialog\r\n        this.getAllPostPage(0, 5);\r\n    })\r\n  }\r\n\r\n  validaUrl(url:string):boolean{\r\n    return Utils.isValidUrl(url)\r\n  }\r\n\r\n  goComments(post:Post){\r\n\r\n    const dialogConfig: MatDialogConfig<any> = {\r\n      data:post,\r\n      maxWidth: '100vw',\r\n      maxHeight: '100vh',\r\n      panelClass: 'full-screen-dialog-coments',\r\n    };\r\n    dialogConfig.disableClose = true;\r\n    \r\n    const modalRef = this.dialog.open(CommentsComponent, dialogConfig)\r\n  }\r\n\r\n\r\n  //optener los datos del usuario desde el token\r\n  uId(){\r\n    const uid = this.authService.decodeToken();\r\n    this.authService.findById(uid).subscribe((data:any) => {\r\n      this.data = data.data\r\n    });\r\n  }\r\n\r\n  //Elimina la publicacion\r\n  deletePost(id: any) {\r\n    this.postService.deletePost(id).subscribe({\r\n      next:(data)=>{\r\n        this.alertsService.succesMessage(\"\", data.message);\r\n        this.getAllPostPage(0, 5);\r\n      },\r\n      error:(data) =>{\r\n        this.alertsService.errorMessage('',data.message);        \r\n      }     \r\n    })\r\n  }\r\n\r\n\r\n  editPost(id: any){\r\n    const modalRef = this.dialog.open(EditMyPostComponent, {\r\n      data:id,\r\n      maxWidth: \"100vw\",\r\n      maxHeight: \"100vh\",\r\n      panelClass: \"full-screen-dialog-create-post\",\r\n    });\r\n    modalRef.afterClosed().subscribe((result) => {\r\n      //Se cerro el dialog\r\n      this.getAllPostPage(0, 5);\r\n    });\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"content-block\">\r\n  <div class=\"row\">\r\n    <div class=\"col-lg-12 col-md-12 col-sm-9 col-xs-9\">\r\n      <div class=\"card\">\r\n        <div class=\"body\">\r\n          <div class=\"wrapper\">\r\n            <main class=\"main\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-3\">\r\n                  <mat-card class=\"example-card\">\r\n                    <mat-card-header>\r\n                      <mat-card-title>{{data?.name}}</mat-card-title>\r\n                      \r\n                    </mat-card-header>\r\n                    <p class=\"ms-4\" style=\"color: blue;\">Publicaciones</p>\r\n                    <mat-card-actions>\r\n                      <button mat-button (click)=\"createPost()\">Crear publicación</button>\r\n                      <button mat-button routerLink=\"/home/bookface/myposts\">Mis publicaciones</button>\r\n                    </mat-card-actions>\r\n                  </mat-card>\r\n                </div>\r\n\r\n                <div class=\"col-md-6 scrollClass\" (scroll)=\"onScroll()\">\r\n                  <mat-card class=\"example-card\" *ngFor=\"let post of posts\" [@pageTransition]>\r\n                    <mat-card-header>\r\n                      <div mat-card-avatar class=\"example-header-image\"\r\n                        style=\"background-image:url('{{post.user.avatar}}')\"></div>\r\n                      <mat-card-title>{{post.user.name}} {{post.user.fatherLastName}} {{post.user.motherLastName}}\r\n                      </mat-card-title>\r\n                      <mat-card-subtitle>{{post.dateRegistration | date: 'dd-MMMM-yyyy'}}</mat-card-subtitle>\r\n                    </mat-card-header>\r\n\r\n                    <mat-card-content>\r\n                      <p class=\"postText\">\r\n                        {{post.description}}\r\n                      </p>\r\n                    </mat-card-content>\r\n\r\n                    <img mat-card-image m-1 class=\"imagenPost\" *ngIf=\"post.multimedia && validaUrl(post.multimedia)\"\r\n                      src=\"{{post.multimedia}}\" alt=\"No se puede visualizar la imagen\">\r\n\r\n                    <mat-card-actions>\r\n                      <button mat-button color=\"primary\" [ngClass]=\"{'liked': post.liked}\" (click)=\"toggleLike(post)\">\r\n                        <mat-icon matBadge=\"{{post.numLike}}\">thumb_up_off_alt</mat-icon>\r\n                        LIKE\r\n                      </button>\r\n\r\n                      <button mat-button color=\"primary\" (click)=\"goComments(post)\"  >\r\n                        <mat-icon>chat_bubble_outline</mat-icon>\r\n                        Comentarios\r\n                      </button>\r\n                    </mat-card-actions>\r\n                  </mat-card>\r\n                  <div class=\"col spinner\">\r\n                    <mat-spinner *ngIf=\"cargando\"></mat-spinner>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"col-md-3\">\r\n\r\n                </div>\r\n\r\n              </div>\r\n            </main>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { User } from \"src/app/models/user\";\r\nimport { LoginService } from \"src/app/service/login.service\";\r\nimport Swal from \"sweetalert2\";\r\nimport { AlertsService } from '../../../service/alerts.service';\r\n@Component({\r\n  selector: \"app-edit-user\",\r\n  templateUrl: \"./edit-user.component.html\",\r\n  styleUrls: [\"./edit-user.component.scss\"],\r\n})\r\nexport class EditUserComponent implements OnInit {\r\n  @ViewChild(\"fileInput\") fileInput!: ElementRef;\r\n  imgAct: string | ArrayBuffer | null;\r\n  action = \"Editar\";\r\n  authForm: FormGroup;\r\n  data: User;\r\n  avatar: File;\r\n  constructor(\r\n    private matDialogRef: MatDialogRef<EditUserComponent>,\r\n    private authService: LoginService,\r\n    private formBuilder: FormBuilder,\r\n    private alertsService:AlertsService,\r\n\r\n  ) {\r\n    //construccion del formulario\r\n    this.authForm = this.formBuilder.group({\r\n      name: [{ value: \"\", disabled: true }, Validators.required],\r\n      mothersLastName: [{ value: \"\", disabled: true }, Validators.required],\r\n      fatherLastName: [{ value: \"\", disabled: true }, Validators.required],\r\n      email: [\r\n        { value: \"\", disabled: true },\r\n        [Validators.required, Validators.email],\r\n      ],\r\n      age: [{ value: \"\", disabled: true }, Validators.required],\r\n      dateBirth: [{ value: \"\", disabled: true }, Validators.required],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.dataUserId();\r\n  }\r\n\r\n  //Metodo para cerrar este dialogo editar usuario\r\n  closeDialog() {\r\n    this.matDialogRef.close(true);\r\n  }\r\n  //Netodo que nos permite optener los datos del usuario con el id\r\n  dataUserId() {\r\n    const id = this.authService.decodeToken();\r\n    this.authService.findById(id).subscribe((data: any) => {\r\n      this.data = data.data;\r\n      this.imgAct = \"\" + this.data.avatar;\r\n      const dateObj = new Date(this.data.date_birth);\r\n      const formattedDate = dateObj.toISOString().split(\"T\")[0];\r\n\r\n      const datosPreexistentes = {\r\n        name: this.data.name,\r\n        mothersLastName: this.data.mother_last_name,\r\n        fatherLastName: this.data.father_last_name,\r\n        email: this.data.email,\r\n        age: this.data.age,\r\n        dateBirth: formattedDate,\r\n      };\r\n\r\n      // Llenar el formulario con los datos preexistentes\r\n      this.authForm.patchValue(datosPreexistentes);\r\n    });\r\n  }\r\n  //Metodo para cargar una imagen\r\n  cargarImagen(event: Event) {\r\n    const input = event.target as HTMLInputElement;\r\n    if (input.files && input.files[0]) {\r\n      const reader = new FileReader();\r\n      const file = input.files[0];\r\n      this.avatar = file;\r\n\r\n      reader.onload = () => {\r\n        this.imgAct = reader.result;\r\n      };\r\n      reader.readAsDataURL(input.files[0]);\r\n    }\r\n  }\r\n\r\n  //método que permite que el contenedor pueda abrir el explorador para subir la imagen\r\n  seleccImg() {\r\n    this.fileInput.nativeElement.click();\r\n  }\r\n  //Método que para realizar las acciones del formulario\r\n  actionButton() {\r\n    if (this.action == \"Editar\") {\r\n      this.authForm.enable();\r\n      this.action = \"Guardar\";\r\n    } else {\r\n      if (this.authForm.valid) {\r\n        this.seveEdit();\r\n      } else {\r\n        Swal.fire(\r\n          \"\",\r\n          \"Completa todos los campos para editar tu perfil.\",\r\n          \"warning\"\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  //método que guardar los cambios realizados en su perfil\r\n  seveEdit() {\r\n    const data = this.authForm.value;\r\n    const dataUser: User = {\r\n      name: data.name,\r\n      mother_last_name: data.mothersLastName,\r\n      father_last_name: data.fatherLastName,\r\n      email: data.email,\r\n      age: data.age,\r\n      date_birth: data.dateBirth,\r\n      avatar: this.avatar,\r\n    };\r\n    console.log(dataUser);\r\n    this.authService.updateUser(dataUser).subscribe((data: any) => {\r\n      if (data.ok) {\r\n        this.action = \"Editar\";\r\n        this.authForm.disable();\r\n        return Swal.fire(\"\", data.msg, \"success\");\r\n      } else {\r\n        return Swal.fire(\"\", data.msg, \"error\");\r\n      }\r\n    });\r\n  }\r\n\r\n  //metodo que nos permitira cancelar las acciones de formularios\r\n  closeAction() {\r\n    if (this.action != \"Editar\") {\r\n      this.action = \"Editar\";\r\n      this.authForm.disable();\r\n    } else {\r\n      this.closeDialog();\r\n    }\r\n  }\r\n  cambiar(){\r\n    const email:User={\r\n      email:this.data.email\r\n    }\r\n    this.authService.forgetPassword(email).subscribe(data=>{\r\n      if(data.ok){\r\n        this.matDialogRef.close()\r\n        this.alertsService.succesMessage('',data.msg);  \r\n      }\r\n      if(!data.ok){\r\n        this.alertsService.warningMessage(data.msg);\r\n      }\r\n    })\r\n  }\r\n}\r\n","<div class=\"container text\">\r\n  <div class=\"row d-flex align-items-center justify-content-center\">\r\n    <div class=\"contenedor\">\r\n      <button\r\n        class=\"elemento\"\r\n        mat-mini-fab\r\n        color=\"secondary\"\r\n        (click)=\"closeDialog()\"\r\n      >\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </div>\r\n    <h2 class=\"text-center card-header\">Perfil de usuario</h2>\r\n    \r\n  </div>\r\n  \r\n\r\n \r\n  <form [formGroup]=\"authForm\"\r\n  (ngSubmit)=\"actionButton()\">\r\n    <div class=\" mt-5 d-flex align-items-center justify-content-center\">\r\n      <div class=\"contImg \" (click)=\"seleccImg()\">\r\n        <img [src]=\"imgAct\" alt=\"Imagen\" *ngIf=\"imgAct\" />\r\n        <input type=\"file\" [disabled]=\"action ==='Editar'\" #fileInput style=\"display: none\" (change)=\"cargarImagen($event)\" />\r\n      </div>\r\n    </div>\r\n    <div class=\"card-header\">Datos personales</div>\r\n    <div class=\"row mt-5\">\r\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n          <mat-label>Nombre del usuario</mat-label>\r\n          <input [disabled]=\"action === 'Editar'\" matInput formControlName=\"name\" required />\r\n          <mat-error *ngIf=\"authForm.get('name').hasError('required')\">\r\n            El nombre del usuario es requerido\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"row\">\r\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n          <mat-label>Apellido Materno</mat-label>\r\n          <input matInput formControlName=\"mothersLastName\" required />\r\n          <mat-error\r\n            *ngIf=\"authForm.get('mothersLastName').hasError('required')\"\r\n          >\r\n            El apellido materno es requerido\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n          <mat-label>Apellido paterno</mat-label>\r\n          <input matInput formControlName=\"fatherLastName\" required />\r\n          <mat-error\r\n            *ngIf=\"authForm.get('fatherLastName').hasError('required')\"\r\n          >\r\n            El apellido paterno es requerido\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n          <mat-label>Email</mat-label>\r\n          <input matInput type=\"email\" formControlName=\"email\" required />\r\n          <mat-error *ngIf=\"authForm.get('email').hasError('required')\">\r\n            El email es requerido\r\n          </mat-error>\r\n          <mat-error *ngIf=\"authForm.get('email').hasError('email')\">\r\n            El email ingresado no es válido\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n          <mat-label>Edad</mat-label>\r\n          <input matInput type=\"number\" formControlName=\"age\" required />\r\n          <mat-error *ngIf=\"authForm.get('age').hasError('required')\">\r\n            La edad es requerida\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n          <mat-label>Fecha de nacimiento</mat-label>\r\n          <input\r\n            matInput\r\n            type=\"date\"\r\n            formControlName=\"dateBirth\"\r\n            required\r\n          />\r\n          <mat-error\r\n            *ngIf=\"authForm.get('dateBirth').hasError('required')\"\r\n          >\r\n            La fecha de nacimiento es requerida\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <a mat-icon-button (click)=\"cambiar()\">Cambiar contraseña</a>\r\n    </div>\r\n    <div class=\"row justify-content-end mt-5\">\r\n      <div class=\"col-4\">\r\n        <button mat-raised-button type=\"button\" (click)=\"closeAction() \">Cancelar</button>\r\n      </div>\r\n      <div class=\"col-4\">\r\n        <button mat-raised-button type=\"submit\" color=\"primary\" >{{ action }}</button>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { DOCUMENT } from \"@angular/common\";\r\nimport {\r\n  Component,\r\n  Inject,\r\n  ElementRef,\r\n  OnInit,\r\n  Renderer2,\r\n  AfterViewInit,\r\n} from \"@angular/core\";\r\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\r\nimport { Router } from \"@angular/router\";\r\nimport { User } from \"src/app/models/user\";\r\nimport { LoginService } from \"src/app/service/login.service\";\r\n\r\nimport { MenuService } from \"src/app/service/menu.service\";\r\nimport { UnsubscribeOnDestroyAdapter } from \"src/app/shared/UnsubscribeOnDestroyAdapter\";\r\nimport { EditUserComponent } from \"../edit-user/edit-user.component\";\r\nconst document: any = window.document;\r\n@Component({\r\n  selector: \"app-header\",\r\n  templateUrl: \"./header.component.html\",\r\n  styleUrls: [\"./header.component.scss\"],\r\n})\r\nexport class HeaderComponent implements OnInit{\r\n  data: User= new User();\r\n  public config: any = {};\r\n  userImg: string;\r\n  homePage: string;\r\n  isNavbarCollapsed = true;\r\n  flagvalue;\r\n  countryName;\r\n  langStoreValue: string;\r\n  defaultFlag: string;\r\n  isOpenSidebar: boolean;\r\n  menuOpen = true;\r\n  constructor(\r\n    @Inject(DOCUMENT) private document: Document,\r\n    private renderer: Renderer2,\r\n    public elementRef: ElementRef,\r\n    private authService: LoginService,\r\n    private serviseMenu: MenuService,\r\n    private matDialog: MatDialog ,\r\n  ) {\r\n    \r\n  }\r\n  listLang = [\r\n    { text: \"English\", flag: \"assets/images/flags/us.jpg\", lang: \"en\" },\r\n    { text: \"Spanish\", flag: \"assets/images/flags/spain.jpg\", lang: \"es\" },\r\n    { text: \"German\", flag: \"assets/images/flags/germany.jpg\", lang: \"de\" },\r\n  ];\r\n \r\n  ngOnInit() {\r\n    //Obtiene si se dio clic en el menu para extender el menu\r\n    this.serviseMenu.listen().subscribe((event: any) => {\r\n      this.menuOpen = event.event;\r\n    });\r\n    this.uId()\r\n  }\r\n\r\n  // ngAfterViewInit() {\r\n  //   // set theme on startup\r\n  //   if (localStorage.getItem(\"theme\")) {\r\n  //     this.renderer.removeClass(this.document.body, this.config.layout.variant);\r\n  //     this.renderer.addClass(this.document.body, localStorage.getItem(\"theme\"));\r\n  //   } else {\r\n  //     // this.renderer.addClass(this.document.body, this.config.layout.variant);\r\n  //   }\r\n\r\n  //   if (localStorage.getItem(\"menuOption\")) {\r\n  //     this.renderer.addClass(\r\n  //       this.document.body,\r\n  //       localStorage.getItem(\"menuOption\")\r\n  //     );\r\n  //   } else {\r\n  //     this.renderer.addClass(\r\n  //       this.document.body,\r\n  //       \"menu_\" + this.config.layout.sidebar.backgroundColor\r\n  //     );\r\n  //   }\r\n\r\n  //   if (localStorage.getItem(\"choose_logoheader\")) {\r\n  //     this.renderer.addClass(\r\n  //       this.document.body,\r\n  //       localStorage.getItem(\"choose_logoheader\")\r\n  //     );\r\n  //   } else {\r\n  //     this.renderer.addClass(\r\n  //       this.document.body,\r\n  //       \"logo-\" + this.config.layout.logo_bg_color\r\n  //     );\r\n  //   }\r\n\r\n  //   if (localStorage.getItem(\"sidebar_status\")) {\r\n  //     if (localStorage.getItem(\"sidebar_status\") === \"close\") {\r\n  //       this.renderer.addClass(this.document.body, \"side-closed\");\r\n  //       this.renderer.addClass(this.document.body, \"submenu-closed\");\r\n  //     } else {\r\n  //       this.renderer.removeClass(this.document.body, \"side-closed\");\r\n  //       this.renderer.removeClass(this.document.body, \"submenu-closed\");\r\n  //     }\r\n  //   } else {\r\n  //     if (this.config.layout.sidebar.collapsed === true) {\r\n  //       this.renderer.addClass(this.document.body, \"side-closed\");\r\n  //       this.renderer.addClass(this.document.body, \"submenu-closed\");\r\n  //     }\r\n  //   }\r\n  // }\r\n  callFullscreen() {\r\n    if (\r\n      !document.fullscreenElement &&\r\n      !document.mozFullScreenElement &&\r\n      !document.webkitFullscreenElement &&\r\n      !document.msFullscreenElement\r\n    ) {\r\n      if (document.documentElement.requestFullscreen) {\r\n        document.documentElement.requestFullscreen();\r\n      } else if (document.documentElement.msRequestFullscreen) {\r\n        document.documentElement.msRequestFullscreen();\r\n      } else if (document.documentElement.mozRequestFullScreen) {\r\n        document.documentElement.mozRequestFullScreen();\r\n      } else if (document.documentElement.webkitRequestFullscreen) {\r\n        document.documentElement.webkitRequestFullscreen();\r\n      }\r\n    } else {\r\n      if (document.exitFullscreen) {\r\n        document.exitFullscreen();\r\n      } else if (document.msExitFullscreen) {\r\n        document.msExitFullscreen();\r\n      } else if (document.mozCancelFullScreen) {\r\n        document.mozCancelFullScreen();\r\n      } else if (document.webkitExitFullscreen) {\r\n        document.webkitExitFullscreen();\r\n      }\r\n    }\r\n  }\r\n  setLanguage(text: string, lang: string, flag: string) {\r\n    this.countryName = text;\r\n    this.flagvalue = flag;\r\n    this.langStoreValue = lang;\r\n  }\r\n  mobileMenuSidebarOpen(event: any, className: string) {\r\n    const hasClass = event.target.classList.contains(className);\r\n    if (hasClass) {\r\n      this.renderer.removeClass(this.document.body, className);\r\n    } else {\r\n      this.renderer.addClass(this.document.body, className);\r\n    }\r\n  }\r\n  callSidemenuCollapse() {\r\n    this.menuOpen = !this.menuOpen;\r\n    this.serviseMenu.emit(this.menuOpen);\r\n\r\n  }\r\n\r\n  //Método para salir de la web\r\n  logout() {\r\n    this.authService.logout();\r\n  }\r\n\r\n  //obtener los datos del usuario desde el token\r\n  uId(){\r\n    const uid = this.authService.decodeToken();\r\n    this.authService.findById(uid).subscribe((data:any) => {\r\n      this.data = data.data\r\n    });\r\n  }\r\n\r\n  //Abrir el dialogo de editar usuario\r\n  openEdirUser(){\r\n    \r\n      const dialogConfig: MatDialogConfig<any> = {\r\n        maxWidth: '100vw',\r\n        maxHeight: '100vh',\r\n        panelClass: 'full-screen-dialog-edit-user',\r\n      };\r\n      dialogConfig.disableClose = true;\r\n      // Example usage\r\n      const result =this.matDialog.open(EditUserComponent, dialogConfig);\r\n      result.afterClosed().subscribe((result) => {\r\n        if(result){\r\n          this.uId()\r\n        }\r\n      })\r\n  }\r\n}\r\n","<nav\r\n  #navbar\r\n  class=\"navbar active text\"\r\n  style=\"background-color: rgb(255, 255, 255); color: black\"\r\n>\r\n  <div class=\"container-fluid\">\r\n    <div class=\"navbar-header\">\r\n      <!-- <a\r\n        href=\"#\"\r\n        onClick=\"return false;\"\r\n        style=\"color: black\"\r\n        class=\"navbar-toggle collapsed\"\r\n        (click)=\"isNavbarCollapsed = !isNavbarCollapsed\"\r\n        aria-expanded=\"false\"\r\n      ></a> -->\r\n      <a class=\"navbar-brand\">\r\n        <div class=\"row\">\r\n          <div class=\"col-1 menuC\">\r\n            <button\r\n              mat-icon-button\r\n              style=\"margin-top: -2px\"\r\n              aria-label=\"Example icon-button with menu icon\"\r\n              (click)=\"callSidemenuCollapse()\"\r\n            >\r\n              <mat-icon>menu</mat-icon>\r\n            </button>\r\n          </div>\r\n          <div\r\n            routerLink=\"/home\"\r\n            class=\"col logoNetworks d-flex align-items-center justify-content-center\"\r\n            style=\"margin-top: -15px; cursor: pointer\"\r\n          >\r\n            <img src=\"assets/images/media.png\" />\r\n            <span class=\"logo-name text\" style=\"color: black\">Social hub</span>\r\n          </div>\r\n        </div>\r\n      </a>\r\n    </div>\r\n\r\n    <div class=\"collapse navbar-collapse\" [ngbCollapse]=\"isNavbarCollapsed\">\r\n      <ul class=\"float-start collapse-menu-icon menu\">\r\n        <li>\r\n          <button\r\n            mat-icon-button\r\n            class=\"example-icon\"\r\n            aria-label=\"Example icon-button with menu icon\"\r\n            (click)=\"callSidemenuCollapse()\"\r\n          >\r\n            <mat-icon>menu</mat-icon>\r\n          </button>\r\n        </li>\r\n      </ul>\r\n      <ul class=\"nav navbar-nav navbar-right\">\r\n        <!-- Full Screen Button -->\r\n        <li class=\"fullscreen\">\r\n          <button\r\n            mat-icon-button\r\n            (click)=\"callFullscreen()\"\r\n            class=\"nav-notification-icons\"\r\n          >\r\n            <mat-icon\r\n              ><span class=\"material-symbols-outlined\">\r\n                fullscreen\r\n              </span></mat-icon\r\n            >\r\n          </button>\r\n        </li>\r\n        <!-- #END# Full Screen Button -->\r\n        <li class=\"nav-item langSelItem\" ngbDropdown>\r\n          <a ngbDropdownToggle class=\"lang-dropdown\">\r\n            <img\r\n              *ngIf=\"flagvalue !== undefined\"\r\n              src=\"{{ flagvalue }}\"\r\n              height=\"16\"\r\n            />\r\n            <img\r\n              *ngIf=\"flagvalue === undefined\"\r\n              src=\"{{ defaultFlag }}\"\r\n              height=\"16\"\r\n            />\r\n          </a>\r\n          <div\r\n            ngbDropdownMenu\r\n            class=\"dropdown-menu lang-item dropdown-menu-right pullDown\"\r\n          >\r\n            <a\r\n              href=\"javascript:void(0);\"\r\n              class=\"dropdown-item lang-item-list\"\r\n              *ngFor=\"let item of listLang\"\r\n              (click)=\"setLanguage(item.text, item.lang, item.flag)\"\r\n              [ngClass]=\"{ active: langStoreValue === item.lang }\"\r\n            >\r\n              <img src=\"{{ item.flag }}\" class=\"flag-img\" height=\"12\" />\r\n              <span class=\"align-middle\">{{ item.text }}</span>\r\n            </a>\r\n          </div>\r\n        </li>\r\n        <!-- #START# Notifications-->\r\n        <li\r\n          class=\"nav-item btnNotification\"\r\n          ngbDropdown\r\n          *ngIf=\"isNavbarCollapsed\"\r\n        >\r\n          <!-- <button\r\n            mat-icon-button\r\n            [matMenuTriggerFor]=\"menu1\"\r\n            class=\"nav-notification-icons\"\r\n          >\r\n            <mat-icon matBadge=\"4\" matBadgeColor=\"warn\"\r\n              ><span class=\"material-symbols-outlined\">\r\n                notifications\r\n              </span></mat-icon\r\n            >\r\n          </button> -->\r\n        </li>\r\n        <!-- #END# Notifications-->\r\n        <li\r\n          class=\"nav-item user_profile btnUserDropdown\"\r\n          [matMenuTriggerFor]=\"menu\"\r\n          ngbDropdown\r\n        >\r\n          <div\r\n            class=\"chip dropdown-toggle\"\r\n            ngbDropdownToggle\r\n            class=\"nav-notification-icons pt-0\"\r\n          >\r\n            <img\r\n              [src]=\"data?.avatar || ''\"\r\n              class=\"user_img d-block imUser\"\r\n              alt=\"User\"\r\n            />\r\n            <span>{{ data.name }}</span>\r\n          </div>\r\n\r\n          <mat-menu #menu=\"matMenu\" class=\"text\">\r\n            <button mat-menu-item (click)=\"openEdirUser()\">\r\n              <mat-icon>manage_accounts</mat-icon>\r\n              <span>Perfil</span>\r\n            </button>\r\n            <button mat-menu-item  routerLink=\"/home/bookface/myposts\">\r\n              <mat-icon>record_voice_over</mat-icon>\r\n              <span>Mis Publicaciones Bookface</span>\r\n            </button>\r\n            <button mat-menu-item >\r\n              <mat-icon>record_voice_over</mat-icon>\r\n              <span>Mis Publicaciones Toktik</span>\r\n            </button>\r\n            <button mat-menu-item disabled>\r\n              <mat-icon>feedback</mat-icon>\r\n              <span>Términos y Condiciones</span>\r\n            </button>\r\n            <button mat-menu-item (click)=\"logout()\">\r\n              <mat-icon>logout</mat-icon>\r\n              <span>Salir</span>\r\n            </button>\r\n            <br style=\"font-size: 1pt\" />\r\n            <div class=\"text-center\">v 1.0.0</div>\r\n          </mat-menu>\r\n        </li>\r\n        <!-- #END# Tasks -->\r\n      </ul>\r\n    </div>\r\n  </div>\r\n  <div class=\"circle text-center menuC\">\r\n    <div class=\"nav-item btnNotification\" ngbDropdown>\r\n      <button\r\n        mat-icon-button\r\n        [matMenuTriggerFor]=\"menu\"\r\n        class=\"nav-notification-icons\"\r\n      >\r\n      <img  [matMenuTriggerFor]=\"menu\"\r\n      [src]=\"data?.avatar || ''\"\r\n      class=\"user_img d-block imUser\"\r\n      alt=\"User\"\r\n    />\r\n      </button>\r\n    </div>\r\n  </div>\r\n</nav>\r\n<mat-menu #menu1=\"matMenu\">\r\n  <div\r\n    class=\"text-center\"\r\n    style=\"background-color: rgb(143, 136, 248); margin-top: -8px\"\r\n  >\r\n    <h2>Notificaciones</h2>\r\n  </div>\r\n  <button mat-menu-item style=\"width: 400px; color: black\">\r\n    <div>\r\n      <img\r\n              [src]=\"data?.avatar || ''\"\r\n              class=\"user_img\"\r\n              alt=\"User\"\r\n            /> {{ data.name }}\r\n    </div>\r\n  </button>\r\n  <button mat-menu-item style=\"width: 400px; color: black\">\r\n    <div>\r\n      <img\r\n              [src]=\"data?.avatar || ''\"\r\n              class=\"user_img\"\r\n              alt=\"User\"\r\n            /> {{ data.name }}\r\n    </div>\r\n  </button>\r\n  <button mat-menu-item style=\"width: 400px; color: black\">\r\n    <div>\r\n      <img\r\n              [src]=\"data?.avatar || ''\"\r\n              class=\"user_img\"\r\n              alt=\"User\"\r\n            /> {{ data.name }}\r\n    </div>\r\n  </button>\r\n</mat-menu>\r\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { SelectComponent } from \"./select/select.component\";\r\nimport { FacebookComponent } from \"../facebook/facebook.component\";\r\nimport { TiktokComponent } from \"../tiktok/tiktok.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    redirectTo: \"select\",\r\n    pathMatch: \"full\",\r\n  },\r\n  { path: \"select\", component: SelectComponent },\r\n  { path: \"bookface\", component: FacebookComponent },\r\n  { path: \"toktik\", component: TiktokComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class HomeRoutingModule {}\r\n","import { DOCUMENT } from \"@angular/common\";\r\nimport { Component, OnInit,HostListener, Inject, Renderer2, ViewChild } from \"@angular/core\";\r\nimport { LoginService } from \"src/app/service/login.service\";\r\nimport { MenuService } from \"src/app/service/menu.service\";\r\nimport { MatDrawer } from '@angular/material/sidenav';\r\n@Component({\r\n  selector: \"app-home\",\r\n  templateUrl: \"./home.component.html\",\r\n  styleUrls: [\"./home.component.scss\"],\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  @ViewChild('drawer') drawer: MatDrawer;\r\n    \r\n \r\n\r\n  openMenu = true;\r\n  iniciarAnimacion = false;\r\n\r\n  constructor(\r\n    @Inject(DOCUMENT) private document: Document,\r\n    private renderer: Renderer2,\r\n    private serviceMenu: MenuService,\r\n    private authService: LoginService\r\n  ) {\r\n    //Obtiene si se dio clic en el menu para extender el menu\r\n    this.serviceMenu.listen().subscribe((event: any) => {\r\n      this.closeMenu()\r\n    });\r\n    \r\n  }\r\n\r\n\r\n\r\n \r\n  ngOnInit(): void {\r\n  }\r\n  //Nos permite salir de la aplicación\r\n  onLogut() {\r\n    this.authService.logout();\r\n  }\r\n  //Nos permite esconder el menú cuando está en un teléfono\r\n  closeMenu() {\r\n    this.drawer.toggle();\r\n  }\r\n}\r\n","<div class=\"conteiner\" style=\"overflow-x: hidden; background-color: white\">\r\n  <mat-toolbar>\r\n    <app-header></app-header>\r\n  </mat-toolbar>\r\n  \r\n  <mat-drawer-container class=\"example-container\" [hasBackdrop]=\"true\">\r\n    <mat-drawer #drawer [mode]=\"'over'\"><div\r\n      class=\"col-1  c1\"\r\n    >\r\n      <div\r\n        routerLink=\"/home\" (click)=\"closeMenu()\" \r\n        class=\"row d-flex align-items-center justify-content-center mt-2 contLogoNet\"\r\n      >\r\n        <div\r\n          class=\"col-1 logoNetworks d-flex align-items-center justify-content-center\"\r\n        >\r\n          <img\r\n            src=\"assets/images/home.png \"\r\n            class=\"rounded d-block imOrVideoP\"\r\n          />\r\n        </div>\r\n        <div [hidden]=\"!openMenu\"  class=\"col textLogo\">Home</div>\r\n      </div>\r\n      <div\r\n        routerLink=\"/home/toktik\" (click)=\"closeMenu()\"\r\n        class=\"row d-flex align-items-center justify-content-center mt-2 contLogoNet\"\r\n      >\r\n        <div\r\n          class=\"col-1 logoNetworks d-flex align-items-center justify-content-center\"\r\n        >\r\n          <img src=\"assets/images/BT.png \" class=\"rounded d-block imOrVideoP\" />\r\n        </div>\r\n        <div [hidden]=\"!openMenu\" class=\"col textLogo\">Toktik</div>\r\n      </div>\r\n      <div\r\n        routerLink=\"/home/bookface\" (click)=\"closeMenu()\"\r\n        class=\"row d-flex align-items-center justify-content-center mt-2 contLogoNet\"\r\n      >\r\n        <div\r\n          class=\"col-1 logoNetworks d-flex align-items-center justify-content-center\"\r\n        >\r\n          <img src=\"assets/images/BF.png \" class=\"rounded d-block imOrVideoP\" />\r\n        </div>\r\n        <div [hidden]=\"!openMenu\" class=\"col textLogo\">Bookface</div>\r\n      </div>\r\n      <div\r\n        (click)=\"onLogut()\"\r\n        class=\"row d-flex align-items-center justify-content-center contLogoNet bt\"\r\n      >\r\n        <div\r\n          class=\"col-1 logoNetworks d-flex align-items-center justify-content-center\"\r\n        >\r\n          <img\r\n            src=\"assets/images/Salir.png \"\r\n            class=\"rounded d-block imOrVideoP\"\r\n          />\r\n        </div>\r\n        <div [hidden]=\"!openMenu\" class=\"col textLogo\">Salir</div>\r\n      </div>\r\n    </div></mat-drawer>\r\n    <mat-drawer-content style=\"height: 93vh; overflow-x: hidden;\">\r\n      <router-outlet></router-outlet>\r\n    </mat-drawer-content>\r\n  </mat-drawer-container>\r\n   <div class=\"row text\">\r\n   <!-- <div\r\n      class=\"col-1  c1\"\r\n    >\r\n      <div\r\n        routerLink=\"/home\"\r\n        class=\"row d-flex align-items-center justify-content-center mt-2 contLogoNet\"\r\n      >\r\n        <div\r\n          class=\"col-1 logoNetworks d-flex align-items-center justify-content-center\"\r\n        >\r\n          <img\r\n            src=\"assets/images/home.png \"\r\n            class=\"rounded d-block imOrVideoP\"\r\n          />\r\n        </div>\r\n        <div [hidden]=\"!openMenu\" class=\"col textLogo\">Home</div>\r\n      </div>\r\n      <div\r\n        routerLink=\"/home/toktik\"\r\n        class=\"row d-flex align-items-center justify-content-center mt-2 contLogoNet\"\r\n      >\r\n        <div\r\n          class=\"col-1 logoNetworks d-flex align-items-center justify-content-center\"\r\n        >\r\n          <img src=\"assets/images/BT.png \" class=\"rounded d-block imOrVideoP\" />\r\n        </div>\r\n        <div [hidden]=\"!openMenu\" class=\"col textLogo\">Toktik</div>\r\n      </div>\r\n      <div\r\n        routerLink=\"/home/bookface\"\r\n        class=\"row d-flex align-items-center justify-content-center mt-2 contLogoNet\"\r\n      >\r\n        <div\r\n          class=\"col-1 logoNetworks d-flex align-items-center justify-content-center\"\r\n        >\r\n          <img src=\"assets/images/BF.png \" class=\"rounded d-block imOrVideoP\" />\r\n        </div>\r\n        <div [hidden]=\"!openMenu\" class=\"col textLogo\">Bookface</div>\r\n      </div>\r\n      <div\r\n        (click)=\"onLogut()\"\r\n        class=\"row d-flex align-items-center justify-content-center contLogoNet bt\"\r\n      >\r\n        <div\r\n          class=\"col-1 logoNetworks d-flex align-items-center justify-content-center\"\r\n        >\r\n          <img\r\n            src=\"assets/images/Salir.png \"\r\n            class=\"rounded d-block imOrVideoP\"\r\n          />\r\n        </div>\r\n        <div [hidden]=\"!openMenu\" class=\"col textLogo\">Salir</div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div\r\n      class=\"col-1 menuCe\"\r\n      [ngClass]=\"openMenu ? ' menuC' : 'c1'\"\r\n      [class.inicio-animacion]=\"iniciarAnimacion\"\r\n      style=\"position: fixed; z-index: 9999\"\r\n      id=\"miDiv\"\r\n    >\r\n      <div\r\n        (click)=\"closeMenu()\"\r\n        routerLink=\"/home\"\r\n        class=\"row d-flex align-items-center justify-content-center mt-2 contLogoNet\"\r\n      >\r\n        <div\r\n          class=\"col-1 logoNetworks d-flex align-items-center justify-content-center\"\r\n        >\r\n          <img\r\n            src=\"assets/images/home.png \"\r\n            class=\"rounded d-block imOrVideoP\"\r\n          />\r\n        </div>\r\n        <div class=\"col textLogo\">Home</div>\r\n      </div>\r\n      <div\r\n        (click)=\"closeMenu()\"\r\n        routerLink=\"/home/toktik\"\r\n        class=\"row d-flex align-items-center justify-content-center mt-2 contLogoNet\"\r\n      >\r\n        <div\r\n          class=\"col-1 logoNetworks d-flex align-items-center justify-content-center\"\r\n        >\r\n          <img src=\"assets/images/BT.png \" class=\"rounded d-block imOrVideoP\" />\r\n        </div>\r\n        <div class=\"col textLogo\">Toktik</div>\r\n      </div>\r\n      <div\r\n        (click)=\"closeMenu()\"\r\n        routerLink=\"/home/bookface\"\r\n        class=\"row d-flex align-items-center justify-content-center mt-2 contLogoNet\"\r\n      >\r\n        <div\r\n          class=\"col-1 logoNetworks d-flex align-items-center justify-content-center\"\r\n        >\r\n          <img src=\"assets/images/BF.png \" class=\"rounded d-block imOrVideoP\" />\r\n        </div>\r\n        <div class=\"col textLogo\">Bookface</div>\r\n      </div>\r\n      <div\r\n        (click)=\"onLogut()\"\r\n        class=\"row d-flex align-items-center justify-content-center contLogoNet bt\"\r\n      >\r\n        <div\r\n          class=\"col-1 logoNetworks d-flex align-items-center justify-content-center\"\r\n        >\r\n          <img\r\n            src=\"assets/images/Salir.png \"\r\n            class=\"rounded d-block imOrVideoP\"\r\n          />\r\n        </div>\r\n        <div class=\"col textLogo\">Salir</div>\r\n      </div>\r\n    </div> -->\r\n    <!-- <div class=\"col\">\r\n      <router-outlet></router-outlet>\r\n    </div>-->\r\n  </div>\r\n</div>\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { HomeRoutingModule } from \"./home-routing.module\";\r\nimport { HomeComponent } from \"./home.component\";\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { MatTabsModule } from \"@angular/material/tabs\";\r\nimport { HeaderComponent } from \"./header/header.component\";\r\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { MatBadgeModule } from \"@angular/material/badge\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { SelectComponent } from \"./select/select.component\";\r\nimport { FacebookModule } from \"../facebook/facebook.module\";\r\nimport { TiktokModule } from \"../tiktok/tiktok.module\";\r\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport { EditUserComponent } from './edit-user/edit-user.component';\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\n@NgModule({\r\n  declarations: [HomeComponent, HeaderComponent, SelectComponent, EditUserComponent],\r\n  imports: [\r\n    CommonModule,\r\n    HomeRoutingModule,\r\n    NgbModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatBadgeModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    FacebookModule,\r\n    TiktokModule,\r\n    ReactiveFormsModule,\r\n    MatSidenavModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatMenuModule,\r\n    MatInputModule,\r\n    MatBadgeModule\r\n  ],\r\n})\r\nexport class HomeModule {}\r\n","import { Component, OnInit } from \"@angular/core\";\r\n@Component({\r\n  selector: \"app-page404\",\r\n  templateUrl: \"./page404.component.html\",\r\n  styleUrls: [\"./page404.component.scss\"],\r\n})\r\nexport class Page404Component implements OnInit {\r\n  constructor() {}\r\n  ngOnInit() {}\r\n}\r\n","<div class=\"auth-container\">\r\n  <div class=\"row auth-main\">\r\n    <div class=\"col-sm-6 px-0 d-none d-sm-block\">\r\n      <div class=\"left-img\" style=\"background-image: url(assets/images/pages/bg-04.png);\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-6 auth-form-section\">\r\n      <div class=\"form-section\">\r\n        <div class=\"auth-wrapper\">\r\n          <form>\r\n            <span class=\"error-header p-b-45\">\r\n              404\r\n            </span>\r\n            <span class=\"error-subheader p-b-5\">\r\n              Looks Like You're Lost\r\n            </span>\r\n            <span class=\"error-subheader2 p-b-5\">\r\n              The Page You Are Looking For Not Available!\r\n            </span>\r\n            <div class=\"container-auth-form-btn mt-5\" routerLink=\"/auth/signin\">\r\n              <button mat-flat-button color=\"primary\" class=\"auth-form-btn\" >\r\n                Go To Home Page\r\n              </button>\r\n            </div>\r\n            <div class=\"w-full p-t-15 p-b-15 text-center\">\r\n              <div>\r\n                <a routerLink=\"/auth/signin\" class=\"txt1\">\r\n                  Need Help?\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-select',\r\n  templateUrl: './select.component.html',\r\n  styleUrls: ['./select.component.scss']\r\n})\r\nexport class SelectComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"conteiner text\">\r\n  <div class=\"row\">\r\n    <div class=\"text-center\">\r\n      <h3>¿Que quieres hacer?</h3>\r\n    </div>\r\n  </div>\r\n  <br>\r\n  <br>\r\n  <div class=\"row d-flex align-items-center justify-content-center\">\r\n    <div style=\"width: 800px\">\r\n      <div class=\"row \">\r\n        <div routerLink=\"/home/toktik\" class=\"col d-flex align-items-center justify-content-center\">\r\n          <div class=\"btnSect d-flex align-items-center justify-content-center\">\r\n            <img\r\n            src=\"assets/images/text TokTik.png \"\r\n            class=\"rounded d-block imOrVideoP\"\r\n          />\r\n          </div>\r\n        </div>\r\n  \r\n        <div routerLink=\"/home/bookface\" class=\"col d-flex align-items-center justify-content-center\">\r\n          <div class=\"btnSect d-flex align-items-center justify-content-center\">\r\n            <img\r\n            src=\"assets/images/Text BoookFace.png \"\r\n            class=\"rounded d-block imOrVideoP1\"\r\n          />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n</div>\r\n\r\n<!-- <div class=\"col\" style=\"cursor: default;\">\r\n      <div class=\"row justify-content-center\">\r\n        <div class=\"col-20\">\r\n          <div class=\"card bg-white\">\r\n            <div class=\"card-body\">\r\n              \r\n              <div class=\"text-center\">\r\n                <h3>¿Que quieres hacer?</h3>\r\n              </div>\r\n              <br>\r\n              <br>\r\n              <div class=\"conteiner\">\r\n                <div class=\"row\">\r\n                  <div class=\"col\">\r\n                    <div class=\"jumbotron text-center\">\r\n                      <a href=\"otra_pagina.html\">\r\n                        <img src=\"../../../assets/images/Text BoookFace.png\" alt=\"Imagen BoookFace\">\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col\">\r\n                    <div class=\"jumbotron text-center jumbotron2\">\r\n                      <a href=\"otra_pagina.html\">\r\n                        <img src=\"../../../assets/images/text TokTik.png\" alt=\"Imagen TokTik\">\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n -->\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { AlertsService } from 'src/app/service/alerts.service';\r\nimport { CommentsService } from 'src/app/service/comments.service';\r\nimport { LoginService } from 'src/app/service/login.service';\r\nimport { User } from 'src/app/models/user';\r\nimport { Post } from 'src/app/models/post.model';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { CommentDTO } from 'src/app/models/commentDTO';\r\nimport { Comment } from 'src/app/models/comment';\r\n\r\n@Component({\r\n  selector: 'app-comments',\r\n  templateUrl: './comments.component.html',\r\n  styleUrls: ['./comments.component.scss']\r\n})\r\nexport class CommentsComponent implements OnInit {\r\n\r\n  constructor(  private commentsService:CommentsService,\r\n  private alertsService:AlertsService,\r\n  private loginService:LoginService,\r\n  private formBuilder:FormBuilder,\r\n  public dialogRef: MatDialogRef<CommentsComponent>,\r\n  @Inject(MAT_DIALOG_DATA) public data: Post,\r\n  ) {\r\n    this.post = data;\r\n  }\r\n\r\n  public comments:Comment[] = [];\r\n  public user:User;\r\n  public post:Post;\r\n  commentLikedMap: { [commentId: string]: boolean } = {};\r\n\r\n  // Editar comentarios\r\n  editingMode = false;\r\n  commentEdit:Comment;\r\n  editedDescription = '';\r\n\r\n  // Formulario para editar\r\n  public formComment = this.formBuilder.group({\r\n    descripction:['']\r\n  })\r\n\r\n  ngOnInit(): void {\r\n    // Al cargar el componente inicia la busqueda como el usuario\r\n    this.findAllComments();\r\n    this.getUser();\r\n  }\r\n\r\n  // Busca todos los comentarios por el post seleccionado\r\n  findAllComments(): void{    \r\n    this.commentsService.findByPostComment(this.post.idPost).subscribe({\r\n      next:(data)=>{\r\n        console.log(data)\r\n        this.comments = data.list;\r\n        console.log(this.comments);\r\n      },\r\n      error:(data) =>{\r\n        this.alertsService.errorMessage('',data.message);        \r\n      }     \r\n    })\r\n  }\r\n  \r\n  // Obtiene todos los usuarios\r\n  getUser(){\r\n    const id = this.loginService.decodeToken();\r\n    this.loginService.findById(id).subscribe({\r\n      next:(user:any)=>{\r\n        this.user = user.data; \r\n        console.log(this.user)       \r\n      },\r\n      error:(error)=>{\r\n        this.alertsService.errorMessage('Error','Hubo un error inesperado');\r\n      }\r\n    })\r\n  }\r\n  \r\n  // Limpia el formulario despues de comentar\r\n  clear(){\r\n    this.formComment.reset()\r\n  }\r\n  \r\n\r\n  // Guarda el comentario\r\n  saveComment(){\r\n    const comment = new CommentDTO();\r\n    comment.post = this.post.idPost;\r\n    comment.descripcion = this.formComment.controls.descripction.value;\r\n    comment.user = this.user.id_user;\r\n    this.commentsService.createComment(comment).subscribe({\r\n      next:(data:any)=>{\r\n        this.alertsService.succesMessage('',data.message);\r\n        this.findAllComments();\r\n        this.clear();\r\n      },\r\n      error:(data:any) =>{\r\n        // console.log(data)\r\n        this.alertsService.errorMessage('',data.error.message)\r\n      }\r\n    })\r\n  }\r\n\r\n  // Actualiza el comentario\r\n  updateComment(comment:Comment){\r\n    console.log(comment)\r\n    const newComment = new CommentDTO();\r\n    newComment.descripcion = this.editedDescription;  \r\n    newComment.idComment = comment.idComment;\r\n    // newComment.multimedia = null\r\n    newComment.numLike = comment.numLike\r\n    newComment.user = this.user.id_user;\r\n    newComment.post = comment.post.idPost;\r\n    this.commentsService.updateComment(newComment).subscribe({\r\n      next:(data:any)=>{\r\n        this.alertsService.succesMessage('',data.message);\r\n        this.findAllComments();\r\n        this.editingMode = false;      \r\n      },\r\n      error:(data:any) =>{\r\n        // console.log(data)\r\n        this.alertsService.errorMessage('',data.error.message)\r\n      }     \r\n    })\r\n\r\n  }\r\n\r\n  // Elimina el comentario\r\n  deleteComment(comment:Comment){\r\n    this.commentsService.deleteComment(comment.idComment).subscribe({\r\n      next:(data:any)=>{\r\n        this.alertsService.succesMessage('',data.message);\r\n        this.findAllComments();\r\n      },\r\n      error:(data:any) =>{\r\n        // console.log(data)\r\n        this.alertsService.errorMessage('',data.error.message)\r\n      }      \r\n    })    \r\n  }\r\n\r\n  // Likes de los comentarios para el backend\r\n  likeComment(comment:Comment){\r\n    this.commentsService.sumLike(comment.idComment).subscribe({\r\n      next:(data:any) =>{\r\n        console.log(data);\r\n        // this.findAllComments();\r\n      },\r\n      error:(data:any)=>{\r\n        console.log(data)\r\n      }      \r\n    })\r\n  }\r\n\r\n  // Quitar like del comentario seleccionado\r\n  subtractLike(comment:Comment){\r\n    this.commentsService.subtractLike(comment.idComment).subscribe({\r\n      next:(data:any) =>{\r\n        console.log(data);\r\n        // this.findAllComments();\r\n      },\r\n      error:(data:any)=>{\r\n        console.log(data)\r\n      }      \r\n    })\r\n  }\r\n\r\n  // Esto nos ayuda a poner el comentario para editarlo\r\n  toggleEditMode(commentM:Comment) {    \r\n    this.editingMode = true;    \r\n    // Busca el comentario para que solo tenga uno y asi poder editar solo uno\r\n    this.commentEdit = this.comments.find(comment => comment.idComment === commentM.idComment);\r\n    this.editedDescription = commentM.descripcion; // Initialize the edited description\r\n  }\r\n\r\n  // Cancelacion del edit\r\n  cancelEdit() {\r\n    // Cancel editing and revert back to read-only mode\r\n    this.editingMode = false;\r\n    this.editedDescription = '';\r\n    this.findAllComments();\r\n\r\n  }\r\n\r\n  // Agregando estilo para agregar y eliminar like\r\n  toggleLikeComment(comment:any) {\r\n    const commentId = comment.idComment;\r\n    if (comment.liked) {\r\n      console.log(\"Restando likes\");\r\n      comment.liked = false;\r\n      comment.numLike--; // Restar el like\r\n      this.subtractLike(comment);\r\n    } else {\r\n      comment.liked = true;\r\n      console.log(\"Sumando like\");\r\n      comment.numLike++; // Sumar el like\r\n      this.likeComment(comment);\r\n    }\r\n  }\r\n\r\n  // Cerrar el componente\r\n  closeComments(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<section>\r\n  <!-- <div class=\"\"> -->\r\n  <p mat-dialog-title>\r\n    Comentarios {{comments.length}}\r\n    <button mat-icon-button mat-dialog-close class=\"icon\" color=\"link\">\r\n      <mat-icon> close </mat-icon>\r\n    </button>\r\n  </p>\r\n  <!-- </div>  -->\r\n</section>\r\n\r\n<!-- <mat-dialog-content class=\"mat-typography text\">   -->\r\n<div class=\"col-md-12 col-lg-12 col-xs-12 scrollable-content\">\r\n  <h2 *ngIf=\"comments.length === 0\">\r\n    No hay comentario, se el primero en comentar\r\n  </h2>\r\n  <mat-card class=\"example-card\" *ngFor=\"let comment of comments; \">\r\n    <div class=\"derecha\" *ngIf=\"comment.user.idUser == user.id_user\">\r\n      <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\">\r\n        <mat-icon>more_vert</mat-icon>\r\n      </button>\r\n      <div>\r\n        <mat-menu #menu=\"matMenu\">\r\n          <button mat-menu-item (click)=\"toggleEditMode(comment)\">\r\n            <mat-icon class=\"col-blue\">cached</mat-icon>\r\n            <span>Editar</span>\r\n          </button>\r\n          <button mat-menu-item (click)=\"deleteComment(comment)\">\r\n            <mat-icon class=\"col-red\">delete</mat-icon>\r\n            <span>Eliminar</span>\r\n          </button>\r\n        </mat-menu>\r\n      </div>\r\n    </div>\r\n    <mat-card-header>\r\n      <div mat-card-avatar class=\"example-header-image\" [style.background-image]=\"'url(' + comment.user.avatar + ')'\">\r\n      </div>\r\n      <div>\r\n        <div class=\"text1 text-truncate\">\r\n          {{ comment.user.name }} {{ comment.user.fatherLastName }}\r\n          {{ comment.user.motherLastName }}\r\n        </div>\r\n        <div>\r\n          {{comment.user.dateRegistration}}\r\n        </div>\r\n      </div>\r\n\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <ng-container *ngIf=\"comment !== commentEdit; else editMode\">\r\n        {{ comment.descripcion }}\r\n      </ng-container>\r\n      <ng-template #editMode>\r\n        <mat-form-field class=\"example-full-width\">\r\n          <input matInput [(ngModel)]=\"editedDescription\" />\r\n        </mat-form-field>\r\n        <div class=\"justify-content-end align-items-center d-flex input-with-image\">\r\n          <button class=\"derecha\" mat-button (click)=\"cancelEdit()\">\r\n            Cancelar\r\n          </button>\r\n          <button class=\"derecha\" [disabled]=\"editedDescription.length === 0\" mat-button color=\"primary\"\r\n            (click)=\"updateComment(comment)\">\r\n            Comentar\r\n          </button>\r\n        </div>\r\n      </ng-template>\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <button [ngClass]=\"{'liked': comment.liked}\" mat-button (click)=\"toggleLikeComment(comment)\">\r\n        <mat-icon matBadge=\"{{comment.numLike}}\" matBadgeOverlap=\"false\" matBadgeColor=\"warn\">\r\n          {{comment.liked ? 'favorite' : 'favorite_border'}}\r\n        </mat-icon>\r\n      </button>\r\n    </mat-card-actions>\r\n    <mat-divider></mat-divider>\r\n  </mat-card>\r\n</div>\r\n<!-- </mat-dialog-content> -->\r\n\r\n<mat-dialog-actions>\r\n  <form [formGroup]=\"formComment\" class=\"example-form\">\r\n    <div class=\"input-with-image\">\r\n      <img class=\"avatar\" [src]=\"user.avatar\">\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Agrega un comentario...</mat-label>\r\n        <input matInput formControlName=\"descripction\" />\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"justify-content-end align-items-center d-flex\">\r\n      <span>\r\n        <button mat-button mat-raised-button (click)=\"saveComment()\" color=\"primary\"\r\n          [disabled]=\"formComment.controls.descripction.value === null\">\r\n          Comentar\r\n        </button>\r\n      </span>\r\n    </div>\r\n  </form>\r\n</mat-dialog-actions>","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { AlertsService } from \"src/app/service/alerts.service\";\r\nimport { LoginService } from \"src/app/service/login.service\";\r\nimport { PublicacioneServices } from \"src/app/service/publicaciones.service\";\r\n\r\n@Component({\r\n  selector: \"app-create-post\",\r\n  templateUrl: \"./create-post.component.html\",\r\n  styleUrls: [\"./create-post.component.scss\"],\r\n})\r\nexport class CreatePostComponent implements OnInit {\r\n  postForm: FormGroup;\r\n  idUser: number;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private publicacioneServices: PublicacioneServices,\r\n    private loginService: LoginService,\r\n    private alertsService: AlertsService,\r\n    public dialogRef: MatDialogRef<CreatePostComponent>\r\n  ) {\r\n    this.postForm = this.fb.group({\r\n      description: [\"\", [Validators.required]],\r\n      multipartFile: [\"\", [Validators.required]],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.idUser = this.loginService.decodeToken();\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.postForm.valid) {\r\n      //Datos del formulario\r\n      const postFile = this.postForm.value;\r\n      console.log(postFile);\r\n\r\n      //Se crea un objeto de tipo File para manejar la imagen\r\n      let imagenFile: File = new File([], \"\");\r\n\r\n      //Se valida que la imgane se haya subido al input en caso de que no se pone como null\r\n      if (postFile.multipartFile != \"\") {\r\n        imagenFile = postFile.multipartFile[0].file;\r\n        if (imagenFile.size > 10000000) {\r\n          this.alertsService.errorMessage(\r\n            \"\",\r\n            \"El peso del archivo supera el limite\"\r\n          );\r\n          return;\r\n        }\r\n      } else {\r\n        imagenFile = null;\r\n      }\r\n\r\n      // Crear instancia de FormData y agregar propiedades del publicacion a enviar\r\n      const formData = new FormData();\r\n      formData.append(\"description\", postFile.description);\r\n      //SE valida si la imagen existe\r\n      if (imagenFile != null) {\r\n        formData.append(\"multipartFile\", imagenFile);\r\n      }\r\n      formData.append(\"user\", this.idUser.toString());\r\n      //Se envia 1 indicando que es una publicacion de toktik\r\n      this.publicacioneServices.createPost(formData, 1).subscribe({\r\n        next: (data) => {\r\n          this.alertsService.succesMessage(\"Publicación\", data.message);\r\n          this.dialogRef.close();\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","\r\n    <div class=\"header\">\r\n        <h2>Crear publicación</h2>\r\n    </div>\r\n    <div class=\"body\">\r\n        <form class=\"m-4\" [formGroup]=\"postForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>Descripción</mat-label>\r\n                        <textarea matInput placeholder=\"¿Que estas pensando?\" formControlName=\"description\"></textarea>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"input-file-container\">\r\n                  <p class=\"mt-1\"><span class=\"uppercase fw-500\">Agregar video</span></p>\r\n                  <input-file formControlName=\"multipartFile\" fileLimit=\"1\" fileAccept=\"video/*\"></input-file>  \r\n                </div>\r\n              </div>\r\n              \r\n            <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-3\">\r\n                    <button class=\"btn-space\" mat-raised-button color=\"primary\">Aceptar</button>\r\n                    <button type=\"button\" mat-button (click)=\"close()\">Cancelar</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-headert',\r\n  templateUrl: './headert.component.html',\r\n  styleUrls: ['./headert.component.scss']\r\n})\r\nexport class HeadertComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { CommentsComponent } from './../../tiktok/comments/comments.component';\r\nimport { AlertsService } from 'src/app/service/alerts.service';\r\nimport { ViewChild } from \"@angular/core\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { Post } from \"src/app/models/post.model\";\r\nimport { PublicacioneServices } from \"src/app/service/publicaciones.service\";\r\nimport { trigger, transition, style, animate } from \"@angular/animations\";\r\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\r\nimport { Utils } from \"src/app/shared/utils/utils\";\r\nimport { LoginService } from \"src/app/service/login.service\";\r\nimport { User } from \"src/app/models/user\";\r\nimport { CreatePostComponent } from '../../tiktok/create-post/create-post.component';\r\n\r\n@Component({\r\n  selector: \"app-my-publicationst\",\r\n  templateUrl: \"./my-publications.component.html\",\r\n  styleUrls: [\"./my-publications.component.scss\"],\r\n})\r\nexport class MyPublicationstComponent implements OnInit {\r\n  seeComments = true;\r\n  subComments = true;\r\n\r\n  pageSize: number = 5; // Tamaño de página\r\n  currentPage: number = 0; // Página actual\r\n  lengthPost: number = 0;\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  data: User;\r\n\r\n  postLiked = false;\r\n\r\n  //Srcoll\r\n  loading = false;\r\n  cargando = false;\r\n\r\n  constructor(\r\n    private postService: PublicacioneServices,\r\n    public dialog: MatDialog,\r\n    private authService: LoginService,\r\n    private alertsService: AlertsService\r\n  ) {}\r\n\r\n  posts: Post[] = [];\r\n\r\n  ngOnInit(): void {\r\n    this.getAllPostPage();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.uId();\r\n  }\r\n\r\n  getAllPost() {\r\n    this.postService.findAllPost().subscribe({\r\n      next: (data) => {\r\n        this.posts = data.list;\r\n        // this.updatePagedPosts();\r\n        // console.log(data);\r\n      },\r\n    });\r\n  }\r\n\r\n  getAllPostPage() {\r\n    // console.log(page, size)\r\n    this.postService.findByUserPost(2).subscribe({\r\n      next: (data) => {\r\n        this.posts = data.list; // Concatenar los nuevos posts al final del array existente\r\n        this.cargando = false;\r\n        //console.log(data);\r\n      },\r\n    });\r\n  }\r\n\r\n  deletePost(id: any) {\r\n    this.postService.deletePost(id).subscribe({\r\n      next:(data)=>{\r\n        this.alertsService.succesMessage(\"\", data.message);\r\n        this.getAllPostPage()\r\n      },\r\n      error:(data) =>{\r\n        this.alertsService.errorMessage('',data.message);        \r\n      }     \r\n    })\r\n    \r\n  }\r\n\r\n  // editPost(id: any){\r\n  //   const modalRef = this.dialog.open(EditMyPostComponent, {\r\n  //     data:id,\r\n  //     maxWidth: \"100vw\",\r\n  //     maxHeight: \"100vh\",\r\n  //     panelClass: \"full-screen-dialog-create-post\",\r\n  //   });\r\n  //   modalRef.afterClosed().subscribe((result) => {\r\n  //     //Se cerro el dialog\r\n  //     this.getAllPostPage();\r\n  //   });\r\n  // }\r\n  scrollPosition = 0;\r\n  loadPostsTimeout: any;\r\n\r\n  onScroll() {\r\n    const scrollContainer = document.querySelector(\".scrollClass\");\r\n    const windowHeight =\r\n      \"innerHeight\" in window\r\n        ? window.innerHeight\r\n        : document.documentElement.offsetHeight;\r\n    const containerHeight = scrollContainer?.clientHeight || 0;\r\n    const containerScrollHeight = scrollContainer?.scrollHeight || 0;\r\n    const containerScrollTop = scrollContainer?.scrollTop || 0;\r\n    const windowBottom = windowHeight + containerScrollTop;\r\n\r\n    if (\r\n      windowBottom >= containerScrollHeight - 1 &&\r\n      containerScrollTop > this.scrollPosition\r\n    ) {\r\n      //Agregando animacion de scroll\r\n\r\n      this.scrollPosition = containerScrollTop;\r\n      clearTimeout(this.loadPostsTimeout);\r\n      this.loadPostsTimeout = setTimeout(() => {}, 400); // Esperar 200 ms antes de cargar más posts\r\n    }\r\n  }\r\n\r\n  activateComments() {\r\n    this.seeComments = !this.seeComments;\r\n  }\r\n  activateSubComments() {\r\n    this.subComments = !this.subComments;\r\n  }\r\n\r\n  toggleLike(row) {\r\n    // console.log(row)\r\n    if (row.liked) {\r\n      // console.log(\"Restando likes\");\r\n      this.postLiked = false;\r\n      row.liked = false;\r\n      row.numLike--;\r\n      this.subtractLike(row.idPost);\r\n    } else {\r\n      this.postLiked = true;\r\n      row.numLike++;\r\n      row.liked = true;\r\n      // console.log(\"Sumando like\");\r\n      this.sumLike(row.idPost);\r\n    }\r\n  }\r\n\r\n  subtractLike(id) {\r\n    this.postService.subtractLike(id).subscribe({\r\n      next: (data) => {\r\n        // console.log(data);\r\n      },\r\n    });\r\n  }\r\n\r\n  sumLike(id) {\r\n    this.postService.sumLike(id).subscribe({\r\n      next: (data) => {\r\n        // console.log(data);\r\n      },\r\n    });\r\n  }\r\n\r\n  onPageChange(event: any) {\r\n    this.currentPage = event.pageIndex;\r\n    // console.log(event)\r\n  }\r\n\r\n  // Método para abrir el diálogo de comentarios, se muestra un cuadro de diálogo con los comentarios del post seleccionado\r\n  comenOpen(post:Post){\r\n    // Objeto donde contiene las propiedad para el modal de comentarios\r\n    const matDialogConfig:MatDialogConfig  ={\r\n      maxWidth: '400vw',\r\n      maxHeight: '400vh',\r\n      panelClass: 'full-screen-dialog-comment-tokTik',      \r\n      data:post\r\n    }   \r\n    // Abriendo Modal\r\n    const modalRef = this.dialog.open(CommentsComponent,matDialogConfig);\r\n    modalRef.afterClosed().subscribe(result=>{\r\n      \r\n    })\r\n  }\r\n\r\n  createPost() {\r\n    const modalRef = this.dialog.open(CreatePostComponent, {\r\n      // width: '1000px',nent\r\n      maxWidth: \"100vw\",\r\n      maxHeight: \"100vh\",\r\n      panelClass: \"full-screen-dialog-create-post\",\r\n    });\r\n    modalRef.afterClosed().subscribe((result) => {\r\n      //Se cerro el dialog\r\n      this.getAllPostPage();\r\n    });\r\n  }\r\n\r\n  validaUrl(url: string): boolean {\r\n    return Utils.isValidUrl(url);\r\n  }\r\n\r\n  goComments(post: Post) {\r\n    const dialogConfig: MatDialogConfig<any> = {\r\n      data: post,\r\n      maxWidth: \"100vw\",\r\n      maxHeight: \"100vh\",\r\n      panelClass: \"full-screen-dialog-coments\",\r\n    };\r\n    dialogConfig.disableClose = true;\r\n\r\n    const modalRef = this.dialog.open(CommentsComponent, dialogConfig);\r\n  }\r\n\r\n  //optener los datos del usuario desde el token\r\n  uId() {\r\n    const uid = this.authService.decodeToken();\r\n    this.authService.findById(uid).subscribe((data: any) => {\r\n      this.data = data.data;\r\n    });\r\n  }\r\n}\r\n","<div class=\"content-block container justify-content-center align-items-center text\">\r\n  <div class=\"row\">\r\n    <div class=\"col-lg-12 col-md-12 col-sm-9 col-xs-9\">\r\n      <div class=\"card\">\r\n        <div class=\"body\">\r\n          <div class=\"wrapper\">\r\n            <main class=\"main\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 scrollClass container justify-content-center align-items-center text\" (scroll)=\"onScroll()\">\r\n                  <div\r\n                    class=\"container justify-content-center align-items-center text\"\r\n                  >\r\n                    <div class=\"row\">\r\n                      <div class=\"col\">\r\n                        <div\r\n                          class=\"col d-flex justify-content-center align-items-center\"\r\n                        >\r\n                          \r\n                          <button\r\n                            mat-raised-button\r\n                            color=\"link\"\r\n                            routerLink=\"/home/toktik/public\"\r\n                          >\r\n                            Ver Publicaciones\r\n                          </button>\r\n                        </div>\r\n                        <div *ngFor=\"let post of posts\">\r\n                          <div class=\"datU\" style=\"width: 80vh\">\r\n                            <div class=\"derecha\">\r\n                              <button [matMenuTriggerFor]=\"menu\"  mat-icon-button color=\"link\">\r\n                                <mat-icon>more_vert</mat-icon>\r\n                              </button>\r\n                                <mat-menu #menu=\"matMenu\" class=\"\">                       \r\n                                  <button mat-menu-item (click)=\"deletePost(post.idPost)\">\r\n                                    <mat-icon>delete</mat-icon>\r\n                                    <span>Eliminar</span>\r\n                                  </button>\r\n                                </mat-menu>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                              <div class=\"col-1 vid\">\r\n                                <img\r\n                                  [src]=\"post.user.avatar || ''\"\r\n                                  class=\"user_img d-block imUser\"\r\n                                  alt=\"User\"\r\n                                />\r\n                              </div>\r\n                              <div class=\"col\">\r\n                                <h5 style=\"font-weight: bolder\">\r\n                                  {{ post.user.name }}\r\n                                  {{ post.user.fatherLastName }}\r\n                                  {{ post.user.motherLastName }}\r\n                                </h5>\r\n                                <h6 style=\"font-weight: bolder\">\r\n                                  {{ post.description }}\r\n                                </h6>\r\n                              </div>\r\n                            </div>\r\n                            <!-- <div  class=\"col-1\" style=\"background-color: aqua; width: 40px; height: 40px; border-radius: 50%;\">\r\n                                      \r\n                                                </div>\r\n                                                <div class=\"col\">\r\n                                                  <mat-card-header>\r\n                                                  <div mat-card-avatar\r\n                                                    style=\"background-image:url('{{post.user.avatar}}')\"></div>\r\n                                                  <mat-card-title>{{post.user.name}} {{post.user.fatherLastName}} {{post.user.motherLastName}}\r\n                                                  </mat-card-title>\r\n                                                  \r\n                                                </mat-card-header>\r\n                                              {{post.dateRegistration | date: 'dd-MMMM-yyyy'}} -->\r\n                          </div>\r\n                          <div class=\"card-body\">\r\n                            <div class=\"row\">\r\n                              <div\r\n                                class=\"col d-flex justify-content-center align-items-center\"\r\n                              >\r\n                                <video\r\n                                  #videoElement\r\n                                  controls\r\n                                  class=\"video\"\r\n                                  (play)=\"onVideoPlay($event)\"\r\n                                >\r\n                                  <source\r\n                                    src=\"{{ post.multimedia }}\"\r\n                                    type=\"video/ogg\"\r\n                                  />\r\n                                  Tu navegador no admite la etiqueta de video.\r\n                                </video>\r\n                                <div class=\"ms-2 actions\">\r\n                                  <div class=\"text-center\">\r\n                                    <button\r\n                                      mat-mini-fab\r\n                                      color=\"link\"\r\n                                      [ngClass]=\"{ liked: post.liked }\"\r\n                                      (click)=\"toggleLike(post)\"\r\n                                    >\r\n                                      <mat-icon\r\n                                        matBadgeOverlap=\"false\"\r\n                                        matBadgeColor=\"warn\"\r\n                                      >\r\n                                        favorite\r\n                                      </mat-icon>\r\n                                    </button>\r\n                                    <p>{{ post.numLike }}</p>\r\n                                  </div>\r\n                                  <div class=\"text-center\">\r\n                                    <button\r\n                                      class=\"mt-2\"\r\n                                      mat-mini-fab\r\n                                      color=\"link\"\r\n                                      (click)=\"comenOpen(post)\"\r\n                                    >\r\n                                      <mat-icon\r\n                                        matBadgeOverlap=\"false\"\r\n                                        matBadgeColor=\"warn\"\r\n                                      >\r\n                                        textsms\r\n                                      </mat-icon>\r\n                                    </button>\r\n                                  </div>\r\n                                  <div class=\"text-center\">\r\n                                    <button\r\n                                      mat-icon-button\r\n                                      color=\"link\"\r\n                                      class=\"btnIm d-block align-items-center justify-content-center\"\r\n                                    >\r\n                                      <img\r\n                                        [src]=\"post.user.avatar || ''\"\r\n                                        class=\"user_img imUser2\"\r\n                                        alt=\"User\"\r\n                                      />\r\n                                    </button>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <button\r\n                          mat-icon-button\r\n                          class=\"custom-button next\"\r\n                          color=\"primary\"\r\n                        >\r\n                          <mat-icon>keyboard_arrow_right</mat-icon>\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </main>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  HostListener,\r\n  ViewChild,\r\n  ElementRef,\r\n} from \"@angular/core\";\r\nimport { CommentsComponent } from \"../comments/comments.component\";\r\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\r\nimport { PublicacioneServices } from \"src/app/service/publicaciones.service\";\r\nimport { Post } from \"src/app/models/post.model\";\r\nimport { CreatePostComponent } from \"../create-post/create-post.component\";\r\nimport { CommentsService } from \"src/app/service/comments.service\";\r\nimport { AlertsService } from \"src/app/service/alerts.service\";\r\n\r\n@Component({\r\n  selector: \"app-publications\",\r\n  templateUrl: \"./publications.component.html\",\r\n  styleUrls: [\"./publications.component.scss\"],\r\n})\r\nexport class PublicationstComponent implements OnInit {\r\n  // Declaración de variables de clase\r\n  lengthPost: number = 0; // Variable para almacenar el total de publicaciones\r\n  pageSize: number = 5; // Tamaño de página, determina cuántas publicaciones se muestran por página\r\n  currentPage: number = 0; // Página actual, rastrea la página actual que se está mostrando\r\n  posts: Post[] = []; // Arreglo para almacenar las publicaciones que se cargan\r\n\r\n  scrollPosition = 0; // Variable para rastrear la posición de desplazamiento en la página\r\n\r\n  // Variables para el control de carga y paginación\r\n  loading = false; // Indica si se están cargando más publicaciones\r\n  cargando = false; //\r\n\r\n  loadPostsTimeout: any;\r\n  currentVideoIndex = 0; // Variable para rastrear el índice del video actual\r\n\r\n  // Referencia al elemento de video en el DOM, se utiliza con @ViewChild\r\n  @ViewChild(\"videoElement\") videoElement!: ElementRef;\r\n  // Variable para rastrear el video actual que se está reproduciendo\r\n  private currentPlayingVideo: HTMLVideoElement | null = null;\r\n\r\n  // Constructor de la clase, se inyectan el servicio de diálogo (MatDialog) y el servicio de publicaciones (PublicacioneServices)\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    private postService: PublicacioneServices,\r\n    private commentsService: CommentsService,\r\n    private alertsService: AlertsService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadMorePosts(); // Cargar las primeras publicaciones al iniciar el componente\r\n  }\r\n\r\n  // Método para abrir el diálogo de comentarios, se muestra un cuadro de diálogo con los comentarios del post seleccionado\r\n  comenOpen(post: Post) {\r\n    // Objeto donde contiene las propiedad para el modal de comentarios\r\n    const matDialogConfig: MatDialogConfig = {\r\n      maxWidth: \"400vw\",\r\n      maxHeight: \"400vh\",\r\n      panelClass: \"full-screen-dialog-comment-tokTik\",\r\n      data: post,\r\n    };\r\n    // Abriendo Modal\r\n    const modalRef = this.dialog.open(CommentsComponent, matDialogConfig);\r\n    modalRef.afterClosed().subscribe((result) => {});\r\n  }\r\n\r\n  // Método para abrir el diálogo para crear una nueva publicación\r\n  addPost() {\r\n    const modalRef = this.dialog.open(CreatePostComponent, {\r\n      maxWidth: \"100vw\",\r\n      maxHeight: \"100vh\",\r\n      panelClass: \"full-screen-dialog-comment-tokTik\",\r\n    });\r\n    modalRef.afterClosed().subscribe((result) => {\r\n      this.posts = []; // Limpiar el arreglo de publicaciones para cargar nuevos datos\r\n      this.getAllPostPage(0, 1); // 100 posts por carga--SE DEBE CAMBIAR\r\n    });\r\n  }\r\n\r\n  // Método para obtener todas las publicaciones de una página específica y mostrarlas en el componente\r\n  getAllPostPage(page: number, size: number) {\r\n    console.log(page, size);\r\n    this.postService.findAllPostTokTikPage(page, size).subscribe({\r\n      next: (data) => {\r\n        this.lengthPost = data.count;\r\n        this.posts = this.posts.concat(data.list); // Concatenar los nuevos posts al final del array existente\r\n\r\n        // Agregar eventos 'loadeddata' a todos los videos\r\n        this.addVideoLoadedDataEvents();\r\n\r\n        // Realizar el desplazamiento hacia el video recién cargado\r\n        this.scrollToNextVideo();\r\n      },\r\n    });\r\n  }\r\n\r\n  // Método para agregar eventos 'loadeddata' a todos los videos\r\n  addVideoLoadedDataEvents() {\r\n    // Esperar a que se carguen todos los videos y luego agregar los eventos 'loadeddata'\r\n    // Esto asegura que los eventos se agreguen a todos los videos después de que se han renderizado en el DOM\r\n    setTimeout(() => {\r\n      const videoElements = document.querySelectorAll(\r\n        \".video\"\r\n      ) as NodeListOf<HTMLVideoElement>;\r\n      videoElements.forEach((video) => {\r\n        video.addEventListener(\"loadeddata\", this.onVideoLoaded.bind(this));\r\n      });\r\n    }, 15);\r\n  }\r\n\r\n  // Método que se ejecuta cuando un video se ha cargado\r\n  onVideoLoaded(event: Event) {\r\n    const targetVideo = event.target as HTMLVideoElement;\r\n    targetVideo.scrollIntoView({ behavior: \"smooth\", block: \"end\" });\r\n  }\r\n\r\n  // Método para realizar el desplazamiento hacia el video actual\r\n  scrollToNextVideo() {\r\n    if (this.videoElement && this.videoElement.nativeElement) {\r\n      this.videoElement.nativeElement.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  }\r\n\r\n  // Método para cargar más publicaciones\r\n  loadMorePosts() {\r\n    if (!this.loading) {\r\n      this.loading = true;\r\n      this.getAllPostPage(this.currentPage, 1); // 100 posts por carga--SE DEBE CAMBIAR\r\n      this.currentPage++; // Avanzamos al siguiente grupo de 5 posts\r\n      this.currentVideoIndex = this.posts.length - 1; // Actualizar el índice al final del array\r\n\r\n      this.loading = false;\r\n    }\r\n  }\r\n\r\n  // Método para manejar el evento de hacer clic en el botón 'LIKE' de una publicación\r\n  toggleLike(row) {\r\n    console.log(row);\r\n    if (row.liked) {\r\n      console.log(\"Restando likes\");\r\n      // this.postLiked=false;\r\n      row.liked = false;\r\n      row.numLike--;\r\n      this.subtractLike(row.idPost);\r\n    } else {\r\n      // this.postLiked=true;\r\n      row.numLike++;\r\n      row.liked = true;\r\n      console.log(\"Sumando like\");\r\n      this.sumLike(row.idPost);\r\n    }\r\n  }\r\n\r\n  // Método para restar likes de una publicación\r\n  subtractLike(id) {\r\n    this.postService.subtractLike(id).subscribe({\r\n      next: (data) => {\r\n        console.log(data);\r\n      },\r\n    });\r\n  }\r\n\r\n  // Método para sumar likes a una publicación\r\n  sumLike(id) {\r\n    this.postService.sumLike(id).subscribe({\r\n      next: (data) => {\r\n        console.log(data);\r\n      },\r\n    });\r\n  }\r\n\r\n  // Método que se ejecuta cuando se inicia la reproducción de un video\r\n  onVideoPlay(event: Event) {\r\n    const targetVideo = event.target as HTMLVideoElement;\r\n\r\n    // Si hay un video reproduciéndose actualmente, lo detenemos\r\n    if (this.currentPlayingVideo && this.currentPlayingVideo !== targetVideo) {\r\n      this.currentPlayingVideo.pause();\r\n    }\r\n\r\n    // Asignamos el video actual como el video que se está reproduciendo\r\n    this.currentPlayingVideo = targetVideo;\r\n  }\r\n \r\n}\r\n","<div class=\"container justify-content-center align-items-center text\">\r\n  <div class=\"row\">\r\n    <div class=\"col\">\r\n      <div class=\"col d-flex justify-content-center align-items-center\">\r\n        <button mat-raised-button color=\"link\" (click)=\"addPost()\">\r\n          Crear publicación\r\n        </button>\r\n        <button mat-raised-button color=\"link\" routerLink=\"/home/toktik/myposts\" >\r\n          Mis publicaciones\r\n        </button>\r\n      </div>\r\n      <div *ngFor=\"let post of posts\">\r\n        <div class=\"datU\" style=\"width: 80vh\">\r\n          <div class=\"row\">\r\n            <div class=\"col-1 vid\">\r\n              <img\r\n                [src]=\"post.user.avatar || ''\"\r\n                class=\"user_img d-block imUser\"\r\n                alt=\"User\"\r\n              />\r\n            </div>\r\n            <div class=\"col\">\r\n              <h5 style=\"font-weight: bolder\">\r\n                {{ post.user.name }} {{ post.user.fatherLastName }}\r\n                {{ post.user.motherLastName }}\r\n              </h5>\r\n              <h6 style=\"font-weight: bolder\">\r\n                {{ post.description }}\r\n              </h6>\r\n            </div>\r\n          </div>\r\n          <!-- <div  class=\"col-1\" style=\"background-color: aqua; width: 40px; height: 40px; border-radius: 50%;\">\r\n\r\n          </div>\r\n          <div class=\"col\">\r\n            <mat-card-header>\r\n            <div mat-card-avatar\r\n              style=\"background-image:url('{{post.user.avatar}}')\"></div>\r\n            <mat-card-title>{{post.user.name}} {{post.user.fatherLastName}} {{post.user.motherLastName}}\r\n            </mat-card-title>\r\n            \r\n          </mat-card-header>\r\n        {{post.dateRegistration | date: 'dd-MMMM-yyyy'}} -->\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div class=\"row\">\r\n            <div class=\"col d-flex justify-content-center align-items-center\">\r\n              <video autoplay\r\n                #videoElement\r\n                controls\r\n                class=\"video\"\r\n                (play)=\"onVideoPlay($event)\"\r\n              >\r\n                <source src=\"{{ post.multimedia }}\" type=\"video/ogg\" />\r\n                Tu navegador no admite la etiqueta de video.\r\n              </video>\r\n              <div class=\"ms-2 actions\">\r\n                <div class=\"text-center\">\r\n                  <button\r\n                    mat-mini-fab\r\n                    color=\"link\"\r\n                    [ngClass]=\"{ liked: post.liked }\"\r\n                    (click)=\"toggleLike(post)\"\r\n                  >\r\n                    <mat-icon matBadgeOverlap=\"false\" matBadgeColor=\"warn\">\r\n                      favorite\r\n                    </mat-icon>\r\n                  </button>\r\n                  <p>{{ post.numLike }}</p>\r\n                </div>\r\n                <div class=\"text-center\">\r\n                  <button\r\n                    class=\"mt-2\"\r\n                    mat-mini-fab\r\n                    color=\"link\"\r\n                    (click)=\"comenOpen(post)\"\r\n                  >\r\n                    <mat-icon matBadgeOverlap=\"false\" matBadgeColor=\"warn\">\r\n                      textsms\r\n                    </mat-icon>\r\n                  </button>\r\n                 <p></p>\r\n                </div>\r\n                <div class=\"text-center\">\r\n                  <button mat-icon-button color=\"link\" class=\"btnIm d-block align-items-center justify-content-center \">\r\n                    <img\r\n                    [src]=\"post.user.avatar || ''\"\r\n                    class=\"user_img  imUser2\"\r\n                    alt=\"User\"\r\n                  />\r\n                  </button>\r\n                 \r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button\r\n        mat-icon-button\r\n        class=\"custom-button next\"\r\n        color=\"primary\"\r\n        (click)=\"loadMorePosts()\"\r\n      >\r\n        <mat-icon>keyboard_arrow_right</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { TiktokComponent } from './tiktok.component';\r\nimport { PublicationstComponent } from './publications/publications.component';\r\nimport { MyPublicationstComponent } from './my-publications/my-publications.component';\r\n\r\nconst routes: Routes = [\r\n  { path: \"\", redirectTo: \"public\", pathMatch: \"full\" },\r\n  { path: \"public\", component: PublicationstComponent },\r\n  { path: \"myposts\", component: MyPublicationstComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class TiktokRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-tiktok',\r\n  templateUrl: './tiktok.component.html',\r\n  styleUrls: ['./tiktok.component.scss']\r\n})\r\nexport class TiktokComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-headert></app-headert>\r\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { TiktokRoutingModule } from './tiktok-routing.module';\r\nimport { TiktokComponent } from './tiktok.component';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatPseudoCheckboxModule } from '@angular/material/core';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport {InputFileModule} from 'ngx-input-file'\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\n\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatNativeDateModule} from '@angular/material/core';\r\nimport { MatMenuModule } from \"@angular/material/menu\";\r\nimport { HeadertComponent } from './header/headert.component';\r\nimport { PublicationstComponent } from './publications/publications.component';\r\nimport { CommentsComponent } from './comments/comments.component';\r\nimport { CreatePostComponent } from './create-post/create-post.component';\r\nimport { MyPublicationstComponent } from './my-publications/my-publications.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TiktokComponent,\r\n    HeadertComponent,\r\n    PublicationstComponent,\r\n    CommentsComponent,\r\n    CreatePostComponent,\r\n    MyPublicationstComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    TiktokRoutingModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    MatBadgeModule,\r\n    MatCardModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatButtonModule,\r\n    MatPaginatorModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatNativeDateModule,\r\n    MatMenuModule,\r\n    MatDialogModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatPseudoCheckboxModule,\r\n    MatDatepickerModule,\r\n    InputFileModule,\r\n    MatProgressSpinnerModule\r\n  ],\r\n  exports:[TiktokComponent]\r\n})\r\nexport class TiktokModule { }\r\n","import { Injectable } from \"@angular/core\"\r\nimport Swal from \"sweetalert2\"\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\n  export class AlertsService {\r\n  \r\n    // Alerta para el exito de un proceso\r\n    public succesMessage(title:string,message:string){\r\n      Swal.close();\r\n      // Creación de la alerta \r\n      Swal.fire({      \r\n        icon: 'success',\r\n        title:title,        \r\n        text: message,\r\n        showConfirmButton: false,\r\n        timer:2000\r\n      })        \r\n    }\r\n\r\n    // Alerta para un error de un proceso\r\n    public errorMessage(title:string,message:string){\r\n      Swal.close();\r\n      // Creación de la alerta \r\n      Swal.fire({\r\n        icon: 'error',\r\n        title:title,        \r\n        text: message,\r\n        showConfirmButton: false,\r\n        timer:2000\r\n      })    \r\n    }\r\n\r\n    // Alerta para un advertir de un proceso\r\n    public warningMessage(mensaje:string){\r\n      Swal.close();\r\n      // Creación de la alerta \r\n      Swal.fire({\r\n        icon: 'warning',\r\n        text: mensaje,\r\n        showConfirmButton: false,\r\n        timer:2000\r\n      })\r\n    }    \r\n   \r\n  }\r\n  ","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Response } from '../models/response.model';\r\nimport { CommentDTO } from '../models/commentDTO';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommentsService {\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n  private urlAdmin = \"https://18.220.73.90/backend/comment\";\r\n\r\n  private httpOptions = {\r\n    headers: new HttpHeaders({ \"Content-Type\": \"application/json\" }),\r\n  };\r\n\r\n  private httpOptionsFormData = {\r\n    headers: new HttpHeaders({\"enctype\": \"multipart/form-data\" }),\r\n  };\r\n\r\n  findAllComment():Observable<Response<Comment>>{\r\n    return this.http.get<Response<Comment>>(`${this.urlAdmin}/findAllComment`,this.httpOptions);\r\n  }\r\n\r\n  findByIdComment(idComment:number):Observable<Response<Comment>>{\r\n    return this.http.get<Response<Comment>>(`${this.urlAdmin}/findByIdComment/${idComment}`,this.httpOptions);\r\n  }\r\n\r\n  findByPostComment(idComment:number):Observable<Response<Comment>>{\r\n    return this.http.get<Response<Comment>>(`${this.urlAdmin}/findByPostComment/${idComment}`,this.httpOptions);\r\n  }\r\n\r\n  createComment(commentDTO:CommentDTO):Observable<Response<Comment>>{\r\n    let headers = new HttpHeaders();\r\n    headers = headers.append('enctype', 'multipart/form-data');\r\n    const formData = new FormData();\r\n    formData.append('user',commentDTO.user.toString());\r\n    formData.append('post', commentDTO.post.toString());\r\n    if(commentDTO.multipartFile != null){\r\n      formData.append('multipartFile',commentDTO.multipartFile);\r\n    }\r\n    formData.append('descripcion',commentDTO.descripcion);\r\n    console.log(formData)\r\n    return this.http.post<Response<Comment>>(`${this.urlAdmin}/createComment/`,formData,{ headers: headers });\r\n  }\r\n\r\n  updateComment(commentDTO:CommentDTO):Observable<Response<Comment>>{\r\n    let headers = new HttpHeaders();\r\n    headers = headers.append('enctype', 'multipart/form-data');\r\n    const formData = new FormData();\r\n    formData.append('idComment', commentDTO.idComment.toString());\r\n    formData.append('user',commentDTO.user.toString());\r\n    formData.append('post', commentDTO.post.toString());\r\n    if(commentDTO.multipartFile != null){\r\n      formData.append('multipartFile',commentDTO.multipartFile);\r\n    }\r\n    formData.append('descripcion',commentDTO.descripcion);\r\n    formData.append('multimedia',commentDTO.multimedia);\r\n\r\n    return this.http.put<Response<Comment>>(`${this.urlAdmin}/updateComment/`,formData,{headers:headers});\r\n  }\r\n\r\n  deleteComment(idPost:number):Observable<Response<Comment>>{\r\n    return this.http.delete<Response<Comment>>(`${this.urlAdmin}/deleteComment/${idPost}`,this.httpOptions);\r\n  }\r\n\r\n  sumLike(idComment:number):Observable<Response<Comment>>{\r\n    return this.http.put<Response<Comment>>(`${this.urlAdmin}/sumLike/${idComment}`,this.httpOptions);\r\n  }\r\n\r\n  subtractLike(idComment:number){\r\n    return this.http.put<Response<Comment>>(`${this.urlAdmin}/subtractLike/${idComment}`,this.httpOptions);\r\n\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ErroresService {\r\n\r\n  constructor() { }\r\n\r\n  error(error:any):string{\r\n      if(error === 'Bad Request'){\r\n        return \"Ya existe un usuario con ese email\"\r\n      }\r\n    return\r\n  }\r\n}\r\n","import { HttpClient, HttpHeaders, HttpResponse} from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, tap } from 'rxjs';\r\nimport { User } from '../models/user';\r\nimport * as jwt_decode from 'jwt-decode';\r\nimport { Router } from '@angular/router';\r\nimport { Respuesta } from '../models/respuesta';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n\r\n  // Contructor para para la comunicación en el back ademas del router para derigirse a otra pagina\r\n  constructor(private http: HttpClient, private router: Router) { }\r\n\r\n  private token = new BehaviorSubject<string>(\"\");\r\n  private tokenData = new BehaviorSubject<any>({});\r\n  public url: string = environment.servLogin\r\n\r\n  get token$():Observable<string>{\r\n    return this.token.asObservable();\r\n  }\r\n  get tokenData$():Observable<any>{\r\n    return this.tokenData.asObservable();\r\n  }\r\n\r\n  // public fechaExpiracion: any;\r\n\r\n  public guardarLocalStorage(token: string) {\r\n    localStorage.setItem('token', token);\r\n  }\r\n\r\n  public checkToken(){\r\n    const token:string = localStorage.getItem('token');\r\n    console.log(token)\r\n    if(!token){\r\n      this.logout();\r\n    }   \r\n    this.token.next(token!);\r\n    console.log(this.token$)\r\n\r\n  }\r\n\r\n\r\n  // Busqueda con el id para el usuario comunicaión con el back \r\n  public findById(id: number): Observable<User> {\r\n    return this.http.get<User>(`${this.url}/users/findById/${id}`)\r\n  }\r\n\r\n  // Comunicación para guardar el usuario con node\r\n  public createUser(user: User):  Observable<Respuesta> {\r\n    return this.http.post<Respuesta>(`${this.url}/users/createUser`, user);\r\n  }\r\n\r\n    // Comunicación para actualizar el usuario con node\r\n  public updateUser( user: User): Observable<User> {\r\n\r\n    let headers = new HttpHeaders();\r\n  headers = headers.append('enctype', 'multipart/form-data');\r\n    const id = this.decodeToken()\r\n    const formData = new FormData();\r\n    formData.append('name', user.name);\r\n    formData.append('email', user.email);\r\n    formData.append('password', user.password);\r\n    formData.append('confirmed', user.confirmed);\r\n    formData.append('email_verified', user.email_verified);\r\n    formData.append('multi_factor_authentication', user.multi_factor_authentication);\r\n    formData.append('father_last_name', user.father_last_name);\r\n    formData.append('mother_last_name', user.mother_last_name);\r\n    formData.append('age', user.age);\r\n    formData.append('date_birth', user.date_birth);\r\n    formData.append('avatar', user.avatar);\r\n    \r\n    return this.http.put<User>(`${this.url}/users/updateUser/${id}`, formData,{headers:headers});\r\n  }\r\n\r\n  // Comunicación para eliminar el usuario con node\r\n  public deletUser(id: number): Observable<User> {\r\n    return this.http.delete<User>(`${this.url}/users/deleteUser/${id}`,);\r\n  }\r\n\r\n  // Comunicación para la implementación del login \r\n  public login(email: string, password: string) {\r\n    const formularioData = {\r\n      email: email,\r\n      password: password\r\n    }\r\n    return this.http.post(`${this.url}/login/`, formularioData).pipe(tap((resp:any)=>{\r\n\r\n    }))\r\n}\r\n\r\n  // Comunicación para la implementación del login \r\n  public doubleAuthentication(usuario: any) {\r\n    return this.http.post(`${this.url}/login/checkDoubleAuthentication`, usuario).pipe(tap((resp: any) => {\r\n      // this.fechaExpiracion = jwt_decode(resp.msg)\r\n      // localStorage.setItem('fechaExpiracion', this.fechaExpiracion.exp);\r\n      //guardando token\r\n      this.token.next(resp.msg);\r\n      this.guardarLocalStorage(resp.msg)\r\n    }))\r\n  }\r\n  // Confirmación para el correo electronico con node js \r\n  confirmEmail(email_verified: string): Observable<any> {\r\n    return this.http.get<any>(`${this.url}/login/confirmEmail/${email_verified}`);\r\n  }\r\n\r\n  //Comunicación para olvidar password  con node js \r\n  forgetPassword(email:any):Observable<Respuesta>{\r\n    console.log(email)\r\n    return this.http.post<Respuesta>(`${this.url}/login/forget-password`,email);\r\n  }\r\n\r\n  //Checar el token de password para olvidar password  con node js \r\n  checkTokenPassword(tokenPassword:any):Observable<Respuesta>{\r\n    return this.http.get<Respuesta>(`${this.url}/login/new-password/${tokenPassword}`);\r\n  }\r\n\r\n  //nuevo password con node js \r\n  newPassword(tokenPassword:any, password:any):Observable<Respuesta>{\r\n    // console.log(nuevoPassword.password);\r\n    return this.http.post<Respuesta>(`${this.url}/login/new-password/${tokenPassword}`,password);\r\n  }\r\n\r\n  //Salir de la sesión con node js \r\n  logout() {\r\n    //Remover el correo\r\n    this.token.next(\"\");\r\n    this.tokenData.next(null);\r\n    // localStorage.removeItem('token');\r\n    localStorage.removeItem('token');\r\n    // Cambiar la ruta \r\n    this.router.navigateByUrl('/auth/signin');\r\n  }\r\n\r\n  //decodificar token\r\n  decodeToken():number{\r\n    const token =localStorage.getItem('token')\r\n    const decodedToken: any = jwt_decode.default(token);\r\n    return decodedToken.uid\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MenuService {\r\n\r\n  private subject = new Subject<any>();\r\n\r\n  emit(event: boolean) {\r\n    this.subject.next({ event});\r\n  }\r\n\r\n  listen(): Observable<any> {\r\n    return this.subject.asObservable();\r\n  }\r\n}\r\n","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Response } from \"../models/response.model\";\r\nimport { Post } from \"../models/post.model\";\r\nimport { LoginService } from \"./login.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class PublicacioneServices {\r\n  private urlAdmin = \"https://18.220.73.90/backend/post\";\r\n  private httpOptions = {\r\n    headers: new HttpHeaders({ \"Content-Type\": \"application/json\" }),\r\n  };\r\n\r\n  private httpOptionsFormData = {\r\n    headers: new HttpHeaders({\"enctype\": \"multipart/form-data\" }),\r\n  };\r\n\r\n  constructor(private http: HttpClient,\r\n    private authService:LoginService) {}\r\n\r\n  public findAllPost(): Observable<Response<Post>> {\r\n    return this.http.get<Response<Post>>(`${this.urlAdmin}/findAllPost`, this.httpOptions)\r\n  }\r\n\r\n  public findAllPostPage(page:number, size:number): Observable<Response<Post>> {\r\n    return this.http.get<Response<Post>>(`${this.urlAdmin}/findAllPost/${page}/${size}`, this.httpOptions)\r\n  }\r\n\r\n  public findAllPostTokTikPage(page:number, size:number): Observable<Response<Post>> {\r\n    return this.http.get<Response<Post>>(`${this.urlAdmin}/findAllPostToktik/${page}/${size}`, this.httpOptions)\r\n  }\r\n  public findByIdPost(idPost:number): Observable<Response<Post>> {\r\n    return this.http.get<Response<Post>>(`${this.urlAdmin}/findByIdPost/${idPost}`, this.httpOptions)\r\n  }\r\n  public findByUserPost(type:number): Observable<Response<Post>> {\r\n    const idUser=this.authService.decodeToken()\r\n    return this.http.get<Response<Post>>(`${this.urlAdmin}/findByUserPost/${idUser}/${type}`, this.httpOptions)\r\n  }\r\n\r\n public createPost(post:FormData,tipePost:number): Observable<Response<Post>> {\r\n    let headers = new HttpHeaders();\r\n    headers = headers.append('enctype', 'multipart/form-data');\r\n    return this.http.post<Response<Post>>(`${this.urlAdmin}/createPost/${tipePost}`, post, { headers: headers })\r\n }\r\n\r\n public updatePost(tipo:number,post:any): Observable<Response<Post>> {\r\n    //HEADERS\r\n    let headers = new HttpHeaders();\r\n    headers = headers.append('enctype', 'multipart/form-data');\r\n    //fORM DATA\r\n    let formData= new FormData;\r\n    formData.append(\"description\", post.description)\r\n    formData.append(\"idPost\", post.idPost)  \r\n    return this.http.put<Response<Post>>(`${this.urlAdmin}/updatePost/${tipo}`, formData, {headers})\r\n }\r\n\r\n public deletePost(idPost:number): Observable<Response<Post>> {\r\n    return this.http.delete<Response<Post>>(`${this.urlAdmin}/deletePost/${idPost}`, this.httpOptions)\r\n }\r\n\r\n public sumLike(idPost:number): Observable<Response<Post>> {\r\n    return this.http.put<Response<Post>>(`${this.urlAdmin}/sumLike/${idPost}`, {}, this.httpOptions)\r\n }\r\n public subtractLike(idPost:number): Observable<Response<Post>> {\r\n    return this.http.put<Response<Post>>(`${this.urlAdmin}/subtractLike/${idPost}`, {}, this.httpOptions)\r\n }\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { SubSink } from './sub-sink';\n\n/**\n * A class that automatically unsubscribes all observables when the object gets destroyed\n */\n@Injectable()\nexport class UnsubscribeOnDestroyAdapter implements OnDestroy {\n  /**\n   * The subscription sink object that stores all subscriptions\n   */\n  subs = new SubSink();\n\n  /**\n   * The lifecycle hook that unsubscribes all subscriptions when the component / object gets destroyed\n   */\n  ngOnDestroy(): void {\n    this.subs.unsubscribe();\n  }\n}\n","import { Component, OnInit, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"app-feather-icons\",\n  templateUrl: \"./feather-icons.component.html\",\n  styleUrls: [\"./feather-icons.component.sass\"],\n})\nexport class FeatherIconsComponent implements OnInit {\n  @Input(\"icon\") public icon;\n  @Input(\"class\") public class;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<i-feather [name]=\"icon\" [class]=\"class\"></i-feather>","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FeatherIconsComponent } from \"./feather-icons.component\";\n\nimport { FeatherModule } from \"angular-feather\";\nimport { allIcons } from \"angular-feather/icons\";\n\n@NgModule({\n  imports: [CommonModule, FeatherModule.pick(allIcons)],\n  exports: [FeatherIconsComponent, FeatherModule],\n  declarations: [FeatherIconsComponent],\n})\nexport class FeatherIconsModule {}\n","import { NgModule } from \"@angular/core\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\nimport { MatNativeDateModule } from \"@angular/material/core\";\nimport { NgxMaskModule } from \"ngx-mask\";\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { MatListModule } from \"@angular/material/list\";\nimport { MatButtonToggleModule } from \"@angular/material/button-toggle\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\n\nconst materialModules = [\n  MatButtonModule,\n  MatInputModule,\n  MatListModule,\n  MatIconModule,\n  MatTooltipModule,\n  MatDatepickerModule,\n  MatNativeDateModule,\n  NgxMaskModule.forRoot(),\n  MatButtonToggleModule,\n  MatFormFieldModule,\n  MatSlideToggleModule,\n];\n\n@NgModule({\n  declarations: [],\n  imports: [materialModules],\n  exports: [materialModules],\n})\nexport class MaterialModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { RouterModule } from \"@angular/router\";\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\n\nimport { MaterialModule } from \"./material.module\";\nimport { FeatherIconsModule } from \"./components/feather-icons/feather-icons.module\";\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    NgbModule,\n  ],\n  exports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    NgbModule,\n    MaterialModule,\n    FeatherIconsModule,\n  ],\n})\nexport class SharedModule {}\n","import { SubscriptionLike } from \"rxjs\";\n\n/**\n * Subscription sink that holds Observable subscriptions\n * until you call unsubscribe on it in ngOnDestroy.\n */\nexport class SubSink {\n  protected _subs: SubscriptionLike[] = [];\n\n  /**\n   * Subscription sink that holds Observable subscriptions\n   * until you call unsubscribe on it in ngOnDestroy.\n   *\n   * @example\n   * In Angular:\n   * ```\n   *   private subs = new SubSink();\n   *   ...\n   *   this.subs.sink = observable$.subscribe(\n   *   this.subs.add(observable$.subscribe(...));\n   *   ...\n   *   ngOnDestroy() {\n   *     this.subs.unsubscribe();\n   *   }\n   * ```\n   */\n  constructor() {}\n\n  /**\n   * Add subscriptions to the tracked subscriptions\n   * @example\n   *  this.subs.add(observable$.subscribe(...));\n   */\n  add(...subscriptions: SubscriptionLike[]) {\n    this._subs = this._subs.concat(subscriptions);\n  }\n\n  /**\n   * Assign subscription to this sink to add it to the tracked subscriptions\n   * @example\n   *  this.subs.sink = observable$.subscribe(...);\n   */\n  set sink(subscription: SubscriptionLike) {\n    this._subs.push(subscription);\n  }\n\n  /**\n   * Unsubscribe to all subscriptions in ngOnDestroy()\n   * @example\n   *   ngOnDestroy() {\n   *     this.subs.unsubscribe();\n   *   }\n   */\n  unsubscribe() {\n    this._subs.forEach((sub) => sub && sub.unsubscribe());\n    this._subs = [];\n  }\n}\n","\r\nexport class Utils{\r\n\r\n  public static isValidUrl(url: string): boolean {\r\n        // Utiliza una expresión regular para verificar si es un enlace válido\r\n        const pattern = new RegExp('^(https?:\\\\/\\\\/)?'+ // Protocolo\r\n          '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|'+ // Dominio\r\n          '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))'+ // IP (por ejemplo: 192.168.0.1)\r\n          '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*'+ // Puerto y ruta\r\n          '(\\\\?[;&a-z\\\\d%_.~+=-]*)?'+ // Parámetros de consulta\r\n          '(\\\\#[-a-z\\\\d_]*)?$','i'); // Fragmento\r\n      \r\n        return !!pattern.test(url);\r\n      }\r\n      \r\n\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: \"https://18.220.73.90\",\r\n  servLogin: \"https://18.220.73.90/backendlogin/api\"\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}